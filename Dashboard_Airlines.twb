<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20232.23.0909.1159                               -->
<workbook original-version='18.1' source-build='2023.2.2 (20232.23.0909.1159)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AccessibleZoneTabOrder.true...AccessibleZoneTabOrder />
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <_.fcp.SingleValuePerNestSorting.true...SingleValuePerNestSorting />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
    <WorksheetBackgroundTransparency />
    <ZoneBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='18.1'>
      <aliases enabled='yes' />
      <column caption='Choose The Service' datatype='string' name='[ParÃ¡metro 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Total Avg Rating&quot;'>
        <calculation class='tableau' formula='&quot;Total Avg Rating&quot;' />
        <members>
          <member value='&quot;Seat Comfort&quot;' />
          <member value='&quot;Cabin Staff Service&quot;' />
          <member value='&quot;Food and Beverages&quot;' />
          <member value='&quot;Ground Service&quot;' />
          <member value='&quot;Value For Money&quot;' />
          <member value='&quot;Total Avg Rating&quot;' />
        </members>
      </column>
    </datasource>
    <datasource caption='reviews (airlines)' inline='true' name='federated.0llw4420xxwu2615peoss0kqvk84' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='(2)' name='mongodb_jdbc.032f9fu0rq9c1912prr6q0wlt4fm'>
            <connection authentication='auth-user-pass' class='mongodb_jdbc' dbname='airlines' one-time-sql='' username='nosqlg2' v-log-directory='' v-logdir-option='' v-loglevel='OFF' v-mongodb-uri='mongodb://atlas-sql-655cd34eedb7c2442edaec96-xvmpr.a.query.mongodb.net/airlines?ssl=true&amp;authSource=admin' />
          </named-connection>
          <named-connection caption='(3)' name='mongodb_jdbc.0emcjuw10yktlr11gawyw10kmckv'>
            <connection authentication='auth-user-pass' class='mongodb_jdbc' dbname='airline' one-time-sql='' username='nosqlg2' v-log-directory='' v-logdir-option='' v-loglevel='OFF' v-mongodb-uri='mongodb://atlas-sql-655cd34eedb7c2442edaec96-xvmpr.a.query.mongodb.net/airlines?ssl=true&amp;authSource=admin' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='mongodb_jdbc.032f9fu0rq9c1912prr6q0wlt4fm' name='reviews' table='[reviews]' type='table' />
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='mongodb_jdbc.032f9fu0rq9c1912prr6q0wlt4fm' name='reviews' table='[reviews]' type='table' />
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>_id</remote-name>
            <remote-type>1</remote-type>
            <local-name>[_id]</local-name>
            <parent-name>[reviews]</parent-name>
            <remote-alias>_id</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>false</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[reviews_666B88058CAE4674A407CD5FA8063D80]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>airline</remote-name>
            <remote-type>129</remote-type>
            <local-name>[airline]</local-name>
            <parent-name>[reviews]</parent-name>
            <remote-alias>airline</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>false</contains-null>
            <attributes>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[reviews_666B88058CAE4674A407CD5FA8063D80]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>arrival_city</remote-name>
            <remote-type>129</remote-type>
            <local-name>[arrival_city]</local-name>
            <parent-name>[reviews]</parent-name>
            <remote-alias>arrival_city</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>false</contains-null>
            <attributes>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[reviews_666B88058CAE4674A407CD5FA8063D80]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cabin_flown</remote-name>
            <remote-type>129</remote-type>
            <local-name>[cabin_flown]</local-name>
            <parent-name>[reviews]</parent-name>
            <remote-alias>cabin_flown</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>false</contains-null>
            <attributes>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[reviews_666B88058CAE4674A407CD5FA8063D80]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cabin_staff_service</remote-name>
            <remote-type>3</remote-type>
            <local-name>[cabin_staff_service]</local-name>
            <parent-name>[reviews]</parent-name>
            <remote-alias>cabin_staff_service</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>false</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[reviews_666B88058CAE4674A407CD5FA8063D80]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>country</remote-name>
            <remote-type>129</remote-type>
            <local-name>[country]</local-name>
            <parent-name>[reviews]</parent-name>
            <remote-alias>country</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>false</contains-null>
            <attributes>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[reviews_666B88058CAE4674A407CD5FA8063D80]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>datePublished</remote-name>
            <remote-type>135</remote-type>
            <local-name>[datePublished]</local-name>
            <parent-name>[reviews]</parent-name>
            <remote-alias>datePublished</remote-alias>
            <ordinal>7</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Year</aggregation>
            <contains-null>false</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[reviews_666B88058CAE4674A407CD5FA8063D80]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>date_flown</remote-name>
            <remote-type>129</remote-type>
            <local-name>[date_flown]</local-name>
            <parent-name>[reviews]</parent-name>
            <remote-alias>date_flown</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>false</contains-null>
            <attributes>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[reviews_666B88058CAE4674A407CD5FA8063D80]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>departure_city</remote-name>
            <remote-type>129</remote-type>
            <local-name>[departure_city]</local-name>
            <parent-name>[reviews]</parent-name>
            <remote-alias>departure_city</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>false</contains-null>
            <attributes>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[reviews_666B88058CAE4674A407CD5FA8063D80]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>food_and_beverages</remote-name>
            <remote-type>3</remote-type>
            <local-name>[food_and_beverages]</local-name>
            <parent-name>[reviews]</parent-name>
            <remote-alias>food_and_beverages</remote-alias>
            <ordinal>10</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>false</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[reviews_666B88058CAE4674A407CD5FA8063D80]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ground_service</remote-name>
            <remote-type>3</remote-type>
            <local-name>[ground_service]</local-name>
            <parent-name>[reviews]</parent-name>
            <remote-alias>ground_service</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>false</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[reviews_666B88058CAE4674A407CD5FA8063D80]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ratingValue</remote-name>
            <remote-type>3</remote-type>
            <local-name>[ratingValue]</local-name>
            <parent-name>[reviews]</parent-name>
            <remote-alias>ratingValue</remote-alias>
            <ordinal>12</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>false</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[reviews_666B88058CAE4674A407CD5FA8063D80]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>recommended</remote-name>
            <remote-type>129</remote-type>
            <local-name>[recommended]</local-name>
            <parent-name>[reviews]</parent-name>
            <remote-alias>recommended</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>false</contains-null>
            <attributes>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[reviews_666B88058CAE4674A407CD5FA8063D80]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>reviewText</remote-name>
            <remote-type>129</remote-type>
            <local-name>[reviewText]</local-name>
            <parent-name>[reviews]</parent-name>
            <remote-alias>reviewText</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>false</contains-null>
            <attributes>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[reviews_666B88058CAE4674A407CD5FA8063D80]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>route</remote-name>
            <remote-type>129</remote-type>
            <local-name>[route]</local-name>
            <parent-name>[reviews]</parent-name>
            <remote-alias>route</remote-alias>
            <ordinal>15</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>false</contains-null>
            <attributes>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[reviews_666B88058CAE4674A407CD5FA8063D80]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>scale</remote-name>
            <remote-type>11</remote-type>
            <local-name>[scale]</local-name>
            <parent-name>[reviews]</parent-name>
            <remote-alias>scale</remote-alias>
            <ordinal>16</ordinal>
            <local-type>boolean</local-type>
            <aggregation>Count</aggregation>
            <contains-null>false</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[reviews_666B88058CAE4674A407CD5FA8063D80]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>seat_comfort</remote-name>
            <remote-type>3</remote-type>
            <local-name>[seat_comfort]</local-name>
            <parent-name>[reviews]</parent-name>
            <remote-alias>seat_comfort</remote-alias>
            <ordinal>17</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>false</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[reviews_666B88058CAE4674A407CD5FA8063D80]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>type_of_traveller</remote-name>
            <remote-type>129</remote-type>
            <local-name>[type_of_traveller]</local-name>
            <parent-name>[reviews]</parent-name>
            <remote-alias>type_of_traveller</remote-alias>
            <ordinal>18</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>false</contains-null>
            <attributes>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[reviews_666B88058CAE4674A407CD5FA8063D80]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>value_for_money</remote-name>
            <remote-type>3</remote-type>
            <local-name>[value_for_money]</local-name>
            <parent-name>[reviews]</parent-name>
            <remote-alias>value_for_money</remote-alias>
            <ordinal>19</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>false</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[reviews_666B88058CAE4674A407CD5FA8063D80]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[:Measure Names]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;[federated.0llw4420xxwu2615peoss0kqvk84].[__tableau_internal_object_id__].[cnt:reviews_666B88058CAE4674A407CD5FA8063D80:qk]&quot;' value='% Recommended' />
          <alias key='&quot;[federated.0llw4420xxwu2615peoss0kqvk84].[avg:Calculation_498492210555817988:qk]&quot;' value='Avg Rating Choosen Service' />
          <alias key='&quot;[federated.0llw4420xxwu2615peoss0kqvk84].[avg:ratingValue:qk]&quot;' value='Avg Total Rating ( Max 10)' />
          <alias key='&quot;[federated.0llw4420xxwu2615peoss0kqvk84].[pcto:cnt:recommended:qk:2]&quot;' value='% Recommended ' />
          <alias key='&quot;[federated.0llw4420xxwu2615peoss0kqvk84].[sum:ratingValue:qk]&quot;' value='Avg Total Rating' />
        </aliases>
      </column>
      <column caption='Choosen Service' datatype='integer' default-format='n#,##0.0;-#,##0.0' name='[Calculation_498492210555817988]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='CASE [Parameters].[ParÃ¡metro 1]&#13;&#10;WHEN &quot;Seat Comfort&quot; THEN [seat_comfort]&#13;&#10;WHEN &quot;Cabin Staff Service&quot; THEN [cabin_staff_service]&#13;&#10;WHEN &quot;Food and Beverages&quot; THEN [food_and_beverages]&#13;&#10;WHEN &quot;Ground Service&quot; THEN [ground_service]&#13;&#10;WHEN &quot;Value For Money&quot; THEN [value_for_money]&#13;&#10;WHEN &quot;Total Avg Rating&quot; THEN [ratingValue]&#13;&#10;END' />
      </column>
      <_.fcp.ObjectModelTableType.true...column caption='reviews' datatype='table' name='[__tableau_internal_object_id__].[reviews_666B88058CAE4674A407CD5FA8063D80]' role='measure' type='quantitative' />
      <column caption='_Id' datatype='string' name='[_id]' role='dimension' type='nominal' />
      <column caption='Airline' datatype='string' name='[airline]' role='dimension' type='nominal' />
      <column caption='Arrival City' datatype='string' name='[arrival_city]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column caption='Cabin Flown' datatype='string' name='[cabin_flown]' role='dimension' type='nominal' />
      <column caption='Cabin Staff Service' datatype='integer' name='[cabin_staff_service]' role='measure' type='quantitative' />
      <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='Date Published' datatype='datetime' name='[datePublished]' role='dimension' type='ordinal' />
      <column caption='Date Flown' datatype='string' name='[date_flown]' role='dimension' type='nominal' />
      <column caption='Departure City' datatype='string' name='[departure_city]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column caption='Food And Beverages' datatype='integer' name='[food_and_beverages]' role='measure' type='quantitative' />
      <column caption='Ground Service' datatype='integer' name='[ground_service]' role='measure' type='quantitative' />
      <column caption='Rating Value' datatype='integer' default-format='n#,##0.0;-#,##0.0' name='[ratingValue]' role='measure' type='quantitative' />
      <column caption='Recommended' datatype='string' name='[recommended]' role='dimension' type='nominal' />
      <column caption='Review Text' datatype='string' name='[reviewText]' role='dimension' type='nominal' />
      <column caption='Route' datatype='string' name='[route]' role='dimension' type='nominal' />
      <column caption='Scale' datatype='boolean' name='[scale]' role='dimension' type='nominal' />
      <column caption='Seat Comfort' datatype='integer' name='[seat_comfort]' role='measure' type='quantitative' />
      <column caption='Type Of Traveller' datatype='string' name='[type_of_traveller]' role='dimension' type='nominal' />
      <column caption='Value For Money' datatype='integer' default-format='n#,##0.0;-#,##0.0' name='[value_for_money]' role='measure' type='quantitative' />
      <column-instance column='[__tableau_internal_object_id__].[reviews_666B88058CAE4674A407CD5FA8063D80]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:reviews_666B88058CAE4674A407CD5FA8063D80:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_498492210555817988]' derivation='Avg' name='[avg:Calculation_498492210555817988:qk]' pivot='key' type='quantitative' />
      <column-instance column='[cabin_staff_service]' derivation='Avg' name='[avg:cabin_staff_service:qk]' pivot='key' type='quantitative' />
      <column-instance column='[food_and_beverages]' derivation='Avg' name='[avg:food_and_beverages:qk]' pivot='key' type='quantitative' />
      <column-instance column='[ground_service]' derivation='Avg' name='[avg:ground_service:qk]' pivot='key' type='quantitative' />
      <column-instance column='[ratingValue]' derivation='Avg' name='[avg:ratingValue:qk]' pivot='key' type='quantitative' />
      <column-instance column='[seat_comfort]' derivation='Avg' name='[avg:seat_comfort:qk]' pivot='key' type='quantitative' />
      <column-instance column='[value_for_money]' derivation='Avg' name='[avg:value_for_money:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_498492210555817988]' derivation='Count' name='[cnt:Calculation_498492210555817988:qk]' pivot='key' type='quantitative' />
      <column-instance column='[airline]' derivation='None' name='[none:airline:nk]' pivot='key' type='nominal' />
      <column-instance column='[recommended]' derivation='None' name='[none:recommended:nk]' pivot='key' type='nominal' />
      <column-instance column='[recommended]' derivation='Count' name='[pcto:cnt:recommended:qk:2]' pivot='key' type='quantitative'>
        <table-calc ordering-field='[federated.0llw4420xxwu2615peoss0kqvk84].[recommended]' ordering-type='Field' type='PctTotal' />
      </column-instance>
      <column-instance column='[cabin_staff_service]' derivation='Sum' name='[sum:cabin_staff_service:qk]' pivot='key' type='quantitative' />
      <column-instance column='[food_and_beverages]' derivation='Sum' name='[sum:food_and_beverages:qk]' pivot='key' type='quantitative' />
      <column-instance column='[ground_service]' derivation='Sum' name='[sum:ground_service:qk]' pivot='key' type='quantitative' />
      <column-instance column='[ratingValue]' derivation='Sum' name='[sum:ratingValue:qk]' pivot='key' type='quantitative' />
      <column-instance column='[seat_comfort]' derivation='Sum' name='[sum:seat_comfort:qk]' pivot='key' type='quantitative' />
      <column-instance column='[value_for_money]' derivation='Sum' name='[sum:value_for_money:qk]' pivot='key' type='quantitative' />
      <column-instance column='[datePublished]' derivation='Year' name='[yr:datePublished:ok]' pivot='key' type='ordinal' />
      <group caption='AcciÃ³n (Airline)' hidden='true' name='[Action (Airline)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[airline]' />
        </groupfilter>
      </group>
      <group caption='AcciÃ³n (Airline,Recommended)' hidden='true' name='[Action (Airline,Recommended)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[airline]' />
          <groupfilter function='level-members' level='[recommended]' />
        </groupfilter>
      </group>
      <group caption='AcciÃ³n (Cabin Flown)' hidden='true' name='[Action (Cabin Flown)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[cabin_flown]' />
        </groupfilter>
      </group>
      <group caption='AcciÃ³n (Country)' hidden='true' name='[Action (Country)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[country]' />
        </groupfilter>
      </group>
      <group caption='AcciÃ³n (Type Of Traveller)' hidden='true' name='[Action (Type Of Traveller)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[type_of_traveller]' />
        </groupfilter>
      </group>
      <group caption='AcciÃ³n (AÃO(Date Published))' hidden='true' name='[Action (YEAR(Date Published))]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[yr:datePublished:ok]' />
        </groupfilter>
      </group>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:airline:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Aerolineas Argentinas&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Air Caraibes&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Air Malawi&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Air Zimbabwe&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;American Airlines&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Avianca&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Binter Canarias&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Cambodia Angkor Air&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Cobalt&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Eastar Jet&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Evelop Airlines&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;French Bee&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;HiSky&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;ITA Airways&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Kam Air&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Level&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Mandarin Airlines&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;NAM Air&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Olympic Air&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;PLAY&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Rwandair&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Shanghai Airlines&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Somon Air&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Swiss Intl Air Lines&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Thai Smile Airways&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Tunisair&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Virgin Atlantic&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Xiamen Airlines&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;AB Aviation&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Air Bagan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Air India Express&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Air Pegasus&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;AirSWIFT&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;ASKY Airlines&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Bassaka Air&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;British Airways&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Central Mountain Air&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Darwin Airline&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Estonian Air&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;flybe&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Greater Bay Airlines&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Intercaribbean Airways&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Jetstar Asia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;LAN Airlines&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Mack Air&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Mihin Lanka&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;NordStar&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;PAWA Dominicana&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Regent Airways&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;SATENA&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;SkyWest Airlines&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Sun Country Airlines&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;TAME&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;TransAsia Airways&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Utair Aviation&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;WestJet Airlines&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Aero VIP&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Air Busan&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Air Koryo&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Air Tahiti Nui&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Allegiant Air&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Auric Air&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Berjaya Air&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Buraq Air&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;China United Airlines&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Dniproavia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;euroAtlantic Airways&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;FLYONE&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Helvetic Airways&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Iran Aseman Airlines&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Jin Air&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Lao Skyway&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Malaysia Airlines&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Montenegro Airlines&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Nouvelair&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Peruvian Airlines&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Rossiya Airlines&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Seaborne Airlines&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;SmartLynx Airlines&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Suparna Airlines&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;TAROM Romanian&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Tropic Air Belize&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;ViaAir&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Wings Air&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Africa World Airlines&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Air Cote d&apos;Ivoire&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Air Memphis&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;AirAsia X&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Andes Lï¿½neas Aï¿½reas&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Azerbaijan Airlines&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Blue Panorama Airlines&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Cape Air&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Copa Airlines&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;easyJet&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Felix Airways&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Georgian Airways&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Horizon Air&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;JC International Airlines&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Kenya Airways&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Loch Lomond Seaplanes&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Martinair&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;NextJet&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Openskies&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Primera Air&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Safarilink&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Silver Airways&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Spirit Airlines&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;TAAG Angola Airlines&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Thomson Airways&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Uganda Airlines&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;VivaAerobï¿½s&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Yemenia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Aeromar&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Air China&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Air Malta&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;AirAsia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;American Eagle&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Avianca Brazil&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Blu-express&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Cambodia Bayon Airlines&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Comair&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Eastern Airlines&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;EWA Air&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Frontier Airlines&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;HK Express&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Japan Airlines&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Kan Air&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;LIAT&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Mango Airlines&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Nature Air&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Oman Air&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Pobeda Airlines&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Ryanair&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Shenzhen Airlines&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;South African Airways&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Swoop&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Thomas Cook Airlines&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Turkish Airlines&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Virgin Australia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;XL Airways France&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Aerocaribbean&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Air Cairo&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Air Labrador&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Air Tanzania&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Alliance Air&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Aurigny Air&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;BH Air&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Buta Airways&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Citilink&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Dragonair&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Europe Airpost&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;FlySafair&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Henan Airlines&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Iraqi Airways&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Joon&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;LATAM Airlines&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Maldivian&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Motor Sich Airlines&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Novair&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Petroleum Air Services&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Royal Air Maroc&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;SereneAir&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;SmartWings&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Super Air Jet&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Thai AirAsia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;TUI Airways&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;VietJet Air&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Wizz Air&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Air Astana&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Air Iceland Connect&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Air Nostrum&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Airlink&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Armenian Airlines&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Bamboo Airways&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Boutique Air&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Cebu Pacific&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Cyprus Airways&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Eritrean Airlines&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;flyadeal&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Golden Myanmar Airlines&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;IndiGo&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;JetSmart&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;La Compagnie&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Luxair&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;MIAT Mongolian Airlines&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Nordic Regional Airlines&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Passaredo&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Ravn Alaska&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;SATA Air Azores&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Skytrans Airlines&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;STARLUX Airlines&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Tajik Air&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Titan Airways&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;US Airways&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Vueling Airlines&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Adria Airways&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Air Berlin&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Air Italy&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Air Rarotonga&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Akasa Air&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;ATA Airlines&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Batik Air&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Brussels Airlines&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;China Airlines&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Delta Air Lines&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Eswatini Air&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;flybondi&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Gulf Air&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Interjet&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Jetstar Japan&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;LAN Colombia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Madagasikara Airways&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Mokulele Airlines&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Nordwind Airlines&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Peach Aviation&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Regional Express&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Saudi Arabian Airlines&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;SkyWork Airlines&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Sun-Air&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Tame Lï¿½nea Aï¿½rea Del Ecuador&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Transavia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Uzbekistan Airways&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Wideroe&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Air Antilles&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Air France&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Air Niugini&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Aircalin&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Arkia Israeli Airlines&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Badr Airlines&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Boliviana de Aviacion&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Cathay Pacific Airways&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;CSA Czech Airlines&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Ellinair&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Flair Airlines&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;GoAir&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Iberojet&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Jetairfly&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Kulula&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Lucky Air&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;MEGA Maldives Airlines&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;NokScoot&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;PAL Express&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Qatar Airways&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Santa Barbara Airlines&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Skybus&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Star Peru&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;TAG Airlines&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Tigerair Australia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;UP by El Al&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Volotea&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Aeroflot Russian Airlines&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Air Canada&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Air Macau&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Air Transat&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Alliance Airlines&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Austrian Airlines&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Bhutan Airlines&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Camair-Co&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;CityJet&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Druk Air&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Eurowings&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;FMI Air&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Hi Fly&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Island Air&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Jordan Aviation&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Laudamotion&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Malindo Air&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Myanmar Airways&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Novoair&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Philippine Airlines&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Royal Brunei Airlines&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Shaheen Air&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Sol Lï¿½neas Aï¿½reas&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Surinam Airways&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Thai Airways&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;TUIfly&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Vietnam Airlines&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;World2Fly&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Afriqiyah Airways&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Air Djibouti&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Air Moldova&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;AirAsia Zest&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Ariana Afghan Airlines&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Azul Airlines&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Blue1&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Caribbean Airlines&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Corendon Airlines&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Edelweiss Air&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Fiji Airways&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Germania Airline&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Hunnu Air&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Jeju Air&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Kish Airlines&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Loganair&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Mauritania Airlines&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;NIKI&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Orient Thai Airlines&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Privilege Style&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Safi Airways&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Singapore Airlines&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Spring Airlines&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;TACA Airlines&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Tianjin Airlines&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Ukraine International&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;VivaColombia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Yeti Airlines&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Aigle Azur&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Air Dolomiti&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Air Namibia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;airBaltic&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Arik Air&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Azur Air Germany&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Bluebird Airways&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Carpatair&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Corsair&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Egyptair&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Finnair&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Germanwings&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Iberia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Jet Airways&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;KLM Royal Dutch Airlines&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;LOT Polish Airlines&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Maya Island Air&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Nile Air&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Pacific Airlines&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Qantas Airways&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Salam Air&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Sky Airline&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;SriLankan Airlines&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;TACA Regional&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Tibet Airlines&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Ultra Air&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;VLM Airlines&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Zambia Airways&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Air Arabia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Air Greenland&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Air North Yukon&apos;s Airline&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;AirConnect&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Armenia Air Company&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Bahamasair&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;BoraJet&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Cayman Airways&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Cubana Airlines&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Emirates&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Fly540.com&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Gol Transportes Aï¿½reos&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Icelandair&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Jetblue Airways&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Kuwait Airways&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Lufthansa&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Meridiana&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Nordavia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Pan Pacific Airlines&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Qazaq Air&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;SAS Scandinavian&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Skymark Airlines&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;StarFlyer&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Tailwind Airlines&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Tigerair Taiwan&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Ural Airlines&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Voyage Air&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Air Austral&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Air India&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Air Panama&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Airnorth&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Asiana Airlines&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Bangkok Airways&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Breeze Airways&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;CemAir&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Danish Air Transport&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Ernest Airlines&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;FlyArystan&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Grand Cru Airlines&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Insel Air&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Jetstar Airways&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;LAM Mozambique&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Lynx Air&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Middle East Airlines&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Nordica&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Passion Air&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Red Wings Airlines&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;SATA International&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;SkyUp Airlines&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Sudan Airways&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;TAM Airlines&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Transaero Airlines&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;US-Bangla Airlines&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Wamos Air&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Aeromexico&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Air Corsica&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Air Mauritius&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;AirAsia India&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;ANA All Nippon Airways&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Avianca Ecuador&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Blue Air&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Canadian North&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Condor Airlines&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Eastern Airways&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Far Eastern Air Transport&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Fuji Dream Airlines&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Hong Kong Airlines&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Jazeera Airways&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Karthago Airlines&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Libyan Airlines&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Mann Yadanarpon Airlines&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Nauru Airlines&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Omni Air International&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Porter Airlines&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;S7 Siberia Airlines&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Sichuan Airlines&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Southwest Airlines&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;SyrianAir&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Thomas Cook Airlines Belgium&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Turkmenistan Airlines&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Vistara&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Yakutia Airlines&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;AeroItalia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Air Canada rouge&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Air Madagascar&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Air Vanuatu&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Amaszonas&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Avelo Airlines&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Biman Bangladesh Airlines&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Cambodia Airways&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Coastal Aviation&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Dynamic International Airways&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;EVA Air&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Freebird Airlines&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Himalaya Airlines&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Israir Airlines&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Juneyao Air&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;LC Perï¿½&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Malmo Aviation&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Myanmar National Airlines&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Okay Airways&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Phuket Air&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Royal Jordanian Airlines&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Shandong Airlines&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Solomon Airlines&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;SVG Air&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Thai Lion Air&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;TUIfly Nordic&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Virgin America&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;WOW air&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Aegean Airlines&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Air Botswana&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Air Juan&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Air Serbia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Alaska Airlines&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Atlantic Airways&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Beijing Capital Airlines&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Buddha Air&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;China Eastern Airlines&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Dimonim Air&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Ethiopian Airlines&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;flydubai&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Hainan Airlines&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;InterSky&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Jetstar Pacific&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;LAN Peru&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Mahan Air&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Moldavian Airlines&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Norse Atlantic Airways&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Pegasus Airlines&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Rex Airlines&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;SCAT Airlines&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Small Planet Airlines&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;SunExpress&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;TAP Portugal&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;TransNusa&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;V Air&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Winair&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Air Algerie&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Air Europa&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Air New Zealand&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;airblue&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Arkefly&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;BA CityFlyer&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;bmi Regional&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Cathay Dragon&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Croatia Airlines&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;El Al Israel Airlines&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Firefly&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Go First&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Iberia Express&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Jet2.com&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Korean Air&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Lubeck Air&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;MAYAir&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Nok Air&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Pakistan Intl Airlines&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;QantasLink&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Sansa Airlines&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Sky Express Airlines&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Sriwijaya Air&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;TACV Cabo Verde Airlines&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Tigerair&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;United Airlines&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Volaris&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;ZIPAIR&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Aerosur&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Air Costa&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Air Mediterranee&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;AirAsia Philippines&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;AnadoluJet&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Avior Airlines&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Blue Islands&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Canaryfly&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Conviasa&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Easyfly&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;fastjet&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Garuda Indonesia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;HOP!&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Jazz&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;KD Air&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Lion Air&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Manta Air&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Nepal Airlines&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Onur Air&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Precision Air&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;SA Express&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;SilkAir&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;SpiceJet&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;T&apos;Way Air&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Thomas Cook Airlines Scandinavia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;TUS Airways&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Viva Air&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Yangon Airways&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Aer Lingus&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Air Burkina&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Air KBZ&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Air Seychelles&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Alitalia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Atlasglobal&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Belavia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Bulgaria Air&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;China Southern Airlines&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Discover Airlines&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Etihad Airways&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Flynas&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Hawaiian Airlines&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Iran Air&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;JetsuiteX&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Lao Airlines&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Malawian Airlines&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Monarch Airlines&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Norwegian&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;PenAir&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Rhein-Neckar Air&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Scoot&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Smartavia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Sunwing Airlines&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;TAR Aerolineas&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Trigana Air&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Vanilla Air&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Wingo&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[:Measure Names]&#10;[federated.19jdxec19u98vg14kcmkj1kk54gz].[none:sentimentConclusion:nk]' type='palette'>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;[federated.19jdxec19u98vg14kcmkj1kk54gz].[pcto:cnt:sentimentConclusion:qk]&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;[federated.19jdxec19u98vg14kcmkj1kk54gz].[cnt:sentimentConclusion:qk]&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;[federated.0llw4420xxwu2615peoss0kqvk84].[avg:ratingValue:qk]&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;[federated.0llw4420xxwu2615peoss0kqvk84].[avg:Calculation_498492210555817988:qk]&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;[federated.0llw4420xxwu2615peoss0kqvk84].[cnt:Calculation_498492210555817988:qk]&quot;</bucket>
            </map-pri>
          </encoding>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#26aba4'>
              <bucket>&quot;[federated.0llw4420xxwu2615peoss0kqvk84].[avg:Calculation_498492210555817988:qk]&quot;</bucket>
            </map>
            <map to='#26aba4'>
              <bucket>&quot;[federated.0llw4420xxwu2615peoss0kqvk84].[cnt:Calculation_498492210555817988:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0llw4420xxwu2615peoss0kqvk84].[avg:cabin_staff_service:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0llw4420xxwu2615peoss0kqvk84].[sum:cabin_staff_service:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.19jdxec19u98vg14kcmkj1kk54gz].[pcto:cnt:sentimentConclusion:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.0llw4420xxwu2615peoss0kqvk84].[avg:value_for_money:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.0llw4420xxwu2615peoss0kqvk84].[sum:value_for_money:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.0llw4420xxwu2615peoss0kqvk84].[avg:seat_comfort:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.0llw4420xxwu2615peoss0kqvk84].[sum:seat_comfort:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.19jdxec19u98vg14kcmkj1kk54gz].[cnt:Sentiment Conclusion (copia) (copia)_756041817730195476:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.19jdxec19u98vg14kcmkj1kk54gz].[cnt:sentimentConclusion:qk]:1&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.19jdxec19u98vg14kcmkj1kk54gz].[diff:cnt:sentimentConclusion:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.19jdxec19u98vg14kcmkj1kk54gz].[usr:Sentiment Conclusion (copia) (copia)_756041817730195476:qk]&quot;</bucket>
            </map>
            <map to='#7719e3'>
              <bucket>&quot;[federated.0llw4420xxwu2615peoss0kqvk84].[avg:ratingValue:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0llw4420xxwu2615peoss0kqvk84].[avg:ground_service:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0llw4420xxwu2615peoss0kqvk84].[sum:ground_service:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.19jdxec19u98vg14kcmkj1kk54gz].[cnt:Sentiment Conclusion (copia)_756041817730166803:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.19jdxec19u98vg14kcmkj1kk54gz].[cnt:sentimentConclusion:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.19jdxec19u98vg14kcmkj1kk54gz].[ctd:sentimentConclusion:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.19jdxec19u98vg14kcmkj1kk54gz].[usr:Sentiment Conclusion (copia)_756041817730166803:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0llw4420xxwu2615peoss0kqvk84].[avg:food_and_beverages:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0llw4420xxwu2615peoss0kqvk84].[sum:food_and_beverages:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0llw4420xxwu2615peoss0kqvk84].[sum:ratingValue:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.19jdxec19u98vg14kcmkj1kk54gz].[pcto:cnt:sentimentConclusion:qk]:1&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.19jdxec19u98vg14kcmkj1kk54gz].[pcva:cnt:sentimentConclusion:qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:recommended:nk]' palette='sf_default' type='palette'>
            <map to='#54a77b'>
              <bucket>&quot;yes&quot;</bucket>
            </map>
            <map to='#e16032'>
              <bucket>&quot;no&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Colombia&quot;' />
      </semantic-values>
      <datasource-dependencies datasource='Parameters'>
        <column caption='Choose The Service' datatype='string' name='[ParÃ¡metro 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Total Avg Rating&quot;'>
          <calculation class='tableau' formula='&quot;Total Avg Rating&quot;' />
        </column>
      </datasource-dependencies>
      <datasource-dependencies datasource='federated.19jdxec19u98vg14kcmkj1kk54gz'>
        <column caption='Sentiment Conclusion Negative' datatype='integer' name='[Sentiment Conclusion (copia) (copia)_756041817730195476]' role='measure' type='quantitative'>
          <calculation class='tableau' formula='COUNT([sentimentConclusion]=&quot;Negative&quot;)' />
        </column>
        <column caption='Sentiment Conclusion Positive' datatype='integer' name='[Sentiment Conclusion (copia)_756041817730166803]' role='measure' type='quantitative'>
          <calculation class='tableau' formula='COUNT([sentimentConclusion]=&quot;Positive&quot;)' />
        </column>
        <column-instance column='[Sentiment Conclusion (copia) (copia)_756041817730195476]' derivation='Count' name='[cnt:Sentiment Conclusion (copia) (copia)_756041817730195476:qk]' pivot='key' type='quantitative' />
        <column-instance column='[Sentiment Conclusion (copia)_756041817730166803]' derivation='Count' name='[cnt:Sentiment Conclusion (copia)_756041817730166803:qk]' pivot='key' type='quantitative' />
        <column-instance column='[sentimentConclusion]' derivation='Count' name='[cnt:sentimentConclusion:qk]' pivot='key' type='quantitative' />
        <column-instance column='[sentimentConclusion]' derivation='CountD' name='[ctd:sentimentConclusion:qk]' pivot='key' type='quantitative' />
        <column-instance column='[sentimentConclusion]' derivation='Count' name='[diff:cnt:sentimentConclusion:qk]' pivot='key' type='quantitative'>
          <table-calc diff-options='Relative' ordering-type='Rows' type='Difference'>
            <address>
              <value>-1</value>
            </address>
          </table-calc>
        </column-instance>
        <column-instance column='[sentimentConclusion]' derivation='None' name='[none:sentimentConclusion:nk]' pivot='key' type='nominal' />
        <column-instance column='[sentimentConclusion]' derivation='Count' name='[pcto:cnt:sentimentConclusion:qk]' pivot='key' type='quantitative'>
          <table-calc ordering-type='Rows' type='PctTotal' />
        </column-instance>
        <column-instance column='[sentimentConclusion]' derivation='Count' name='[pcva:cnt:sentimentConclusion:qk]' pivot='key' type='quantitative'>
          <table-calc diff-options='Relative' ordering-type='Rows' type='PctValue'>
            <address>
              <value>-1</value>
            </address>
          </table-calc>
        </column-instance>
        <column aggregation='CountD' caption='Sentiment Conclusion' datatype='string' name='[sentimentConclusion]' role='dimension' type='nominal' />
        <column-instance column='[Sentiment Conclusion (copia) (copia)_756041817730195476]' derivation='User' name='[usr:Sentiment Conclusion (copia) (copia)_756041817730195476:qk]' pivot='key' type='quantitative' />
        <column-instance column='[Sentiment Conclusion (copia)_756041817730166803]' derivation='User' name='[usr:Sentiment Conclusion (copia)_756041817730166803:qk]' pivot='key' type='quantitative' />
      </datasource-dependencies>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='reviews' id='reviews_666B88058CAE4674A407CD5FA8063D80'>
            <properties context=''>
              <relation connection='mongodb_jdbc.032f9fu0rq9c1912prr6q0wlt4fm' name='reviews' table='[reviews]' type='table' />
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='review (airline)' inline='true' name='federated.19jdxec19u98vg14kcmkj1kk54gz' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='(2)' name='mongodb_jdbc.0x27e641urs5s210tpm7o0z9u57m'>
            <connection authentication='auth-user-pass' class='mongodb_jdbc' dbname='airline' one-time-sql='' username='nosqlg2' v-log-directory='' v-logdir-option='' v-loglevel='OFF' v-mongodb-uri='mongodb://atlas-sql-655cd34eedb7c2442edaec96-xvmpr.a.query.mongodb.net/airlines?ssl=true&amp;authSource=admin' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='mongodb_jdbc.0x27e641urs5s210tpm7o0z9u57m' name='review' table='[review]' type='table' />
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='mongodb_jdbc.0x27e641urs5s210tpm7o0z9u57m' name='review' table='[review]' type='table' />
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>_id</remote-name>
            <remote-type>1</remote-type>
            <local-name>[_id]</local-name>
            <parent-name>[review]</parent-name>
            <remote-alias>_id</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>false</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[review_946FD714571045948B1F2EAB165D939F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>aircraft</remote-name>
            <remote-type>129</remote-type>
            <local-name>[aircraft]</local-name>
            <parent-name>[review]</parent-name>
            <remote-alias>aircraft</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>false</contains-null>
            <attributes>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[review_946FD714571045948B1F2EAB165D939F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>airline</remote-name>
            <remote-type>129</remote-type>
            <local-name>[airline]</local-name>
            <parent-name>[review]</parent-name>
            <remote-alias>airline</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>false</contains-null>
            <attributes>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[review_946FD714571045948B1F2EAB165D939F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>arrival_city</remote-name>
            <remote-type>129</remote-type>
            <local-name>[arrival_city]</local-name>
            <parent-name>[review]</parent-name>
            <remote-alias>arrival_city</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>false</contains-null>
            <attributes>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[review_946FD714571045948B1F2EAB165D939F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cabin_flown</remote-name>
            <remote-type>129</remote-type>
            <local-name>[cabin_flown]</local-name>
            <parent-name>[review]</parent-name>
            <remote-alias>cabin_flown</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>false</contains-null>
            <attributes>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[review_946FD714571045948B1F2EAB165D939F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cabin_staff_service</remote-name>
            <remote-type>3</remote-type>
            <local-name>[cabin_staff_service]</local-name>
            <parent-name>[review]</parent-name>
            <remote-alias>cabin_staff_service</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>false</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[review_946FD714571045948B1F2EAB165D939F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>country</remote-name>
            <remote-type>129</remote-type>
            <local-name>[country]</local-name>
            <parent-name>[review]</parent-name>
            <remote-alias>country</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>false</contains-null>
            <attributes>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[review_946FD714571045948B1F2EAB165D939F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>datePublished</remote-name>
            <remote-type>135</remote-type>
            <local-name>[datePublished]</local-name>
            <parent-name>[review]</parent-name>
            <remote-alias>datePublished</remote-alias>
            <ordinal>8</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Year</aggregation>
            <contains-null>false</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[review_946FD714571045948B1F2EAB165D939F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>date_flown</remote-name>
            <remote-type>129</remote-type>
            <local-name>[date_flown]</local-name>
            <parent-name>[review]</parent-name>
            <remote-alias>date_flown</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>false</contains-null>
            <attributes>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[review_946FD714571045948B1F2EAB165D939F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>departure_city</remote-name>
            <remote-type>129</remote-type>
            <local-name>[departure_city]</local-name>
            <parent-name>[review]</parent-name>
            <remote-alias>departure_city</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>false</contains-null>
            <attributes>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[review_946FD714571045948B1F2EAB165D939F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>food_and_beverages</remote-name>
            <remote-type>3</remote-type>
            <local-name>[food_and_beverages]</local-name>
            <parent-name>[review]</parent-name>
            <remote-alias>food_and_beverages</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>false</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[review_946FD714571045948B1F2EAB165D939F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ground_service</remote-name>
            <remote-type>3</remote-type>
            <local-name>[ground_service]</local-name>
            <parent-name>[review]</parent-name>
            <remote-alias>ground_service</remote-alias>
            <ordinal>12</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>false</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[review_946FD714571045948B1F2EAB165D939F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ratingValue</remote-name>
            <remote-type>3</remote-type>
            <local-name>[ratingValue]</local-name>
            <parent-name>[review]</parent-name>
            <remote-alias>ratingValue</remote-alias>
            <ordinal>13</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>false</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[review_946FD714571045948B1F2EAB165D939F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>recommended</remote-name>
            <remote-type>129</remote-type>
            <local-name>[recommended]</local-name>
            <parent-name>[review]</parent-name>
            <remote-alias>recommended</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>false</contains-null>
            <attributes>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[review_946FD714571045948B1F2EAB165D939F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>reviewText</remote-name>
            <remote-type>129</remote-type>
            <local-name>[reviewText]</local-name>
            <parent-name>[review]</parent-name>
            <remote-alias>reviewText</remote-alias>
            <ordinal>15</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>false</contains-null>
            <attributes>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[review_946FD714571045948B1F2EAB165D939F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>route</remote-name>
            <remote-type>129</remote-type>
            <local-name>[route]</local-name>
            <parent-name>[review]</parent-name>
            <remote-alias>route</remote-alias>
            <ordinal>16</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>false</contains-null>
            <attributes>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[review_946FD714571045948B1F2EAB165D939F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>scale</remote-name>
            <remote-type>11</remote-type>
            <local-name>[scale]</local-name>
            <parent-name>[review]</parent-name>
            <remote-alias>scale</remote-alias>
            <ordinal>17</ordinal>
            <local-type>boolean</local-type>
            <aggregation>Count</aggregation>
            <contains-null>false</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[review_946FD714571045948B1F2EAB165D939F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>seat_comfort</remote-name>
            <remote-type>3</remote-type>
            <local-name>[seat_comfort]</local-name>
            <parent-name>[review]</parent-name>
            <remote-alias>seat_comfort</remote-alias>
            <ordinal>18</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>false</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[review_946FD714571045948B1F2EAB165D939F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>sentimentConclusion</remote-name>
            <remote-type>129</remote-type>
            <local-name>[sentimentConclusion]</local-name>
            <parent-name>[review]</parent-name>
            <remote-alias>sentimentConclusion</remote-alias>
            <ordinal>19</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>false</contains-null>
            <attributes>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[review_946FD714571045948B1F2EAB165D939F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>sentimentIndexCom</remote-name>
            <remote-type>5</remote-type>
            <local-name>[sentimentIndexCom]</local-name>
            <parent-name>[review]</parent-name>
            <remote-alias>sentimentIndexCom</remote-alias>
            <ordinal>20</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>false</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[review_946FD714571045948B1F2EAB165D939F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>sentimentIndexNeg</remote-name>
            <remote-type>5</remote-type>
            <local-name>[sentimentIndexNeg]</local-name>
            <parent-name>[review]</parent-name>
            <remote-alias>sentimentIndexNeg</remote-alias>
            <ordinal>21</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>false</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[review_946FD714571045948B1F2EAB165D939F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>sentimentIndexNeu</remote-name>
            <remote-type>5</remote-type>
            <local-name>[sentimentIndexNeu]</local-name>
            <parent-name>[review]</parent-name>
            <remote-alias>sentimentIndexNeu</remote-alias>
            <ordinal>22</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>false</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[review_946FD714571045948B1F2EAB165D939F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>sentimentIndexPos</remote-name>
            <remote-type>5</remote-type>
            <local-name>[sentimentIndexPos]</local-name>
            <parent-name>[review]</parent-name>
            <remote-alias>sentimentIndexPos</remote-alias>
            <ordinal>23</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>false</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[review_946FD714571045948B1F2EAB165D939F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>type_of_traveller</remote-name>
            <remote-type>129</remote-type>
            <local-name>[type_of_traveller]</local-name>
            <parent-name>[review]</parent-name>
            <remote-alias>type_of_traveller</remote-alias>
            <ordinal>24</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>false</contains-null>
            <attributes>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[review_946FD714571045948B1F2EAB165D939F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>value_for_money</remote-name>
            <remote-type>3</remote-type>
            <local-name>[value_for_money]</local-name>
            <parent-name>[review]</parent-name>
            <remote-alias>value_for_money</remote-alias>
            <ordinal>25</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>false</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[review_946FD714571045948B1F2EAB165D939F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Sentiment Conclusion Neutral' datatype='integer' name='[Sentiment Conclusion (copia 2)_756041817730404373]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='COUNT([sentimentConclusion]=&quot;Neutral&quot;)' />
      </column>
      <column caption='Sentiment Conclusion Negative' datatype='integer' name='[Sentiment Conclusion (copia) (copia)_756041817730195476]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='COUNT([sentimentConclusion]=&quot;Negative&quot;)' />
      </column>
      <column caption='Sentiment Conclusion Positive' datatype='integer' name='[Sentiment Conclusion (copia)_756041817730166803]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='COUNT([sentimentConclusion]=&quot;Positive&quot;)' />
      </column>
      <_.fcp.ObjectModelTableType.true...column caption='review' datatype='table' name='[__tableau_internal_object_id__].[review_946FD714571045948B1F2EAB165D939F]' role='measure' type='quantitative' />
      <column caption='_Id' datatype='string' name='[_id]' role='dimension' type='nominal' />
      <column caption='Aircraft' datatype='string' name='[aircraft]' role='dimension' type='nominal' />
      <column caption='Airline' datatype='string' name='[airline]' role='dimension' type='nominal' />
      <column caption='Arrival City' datatype='string' name='[arrival_city]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column caption='Cabin Flown' datatype='string' name='[cabin_flown]' role='dimension' type='nominal' />
      <column caption='Cabin Staff Service' datatype='integer' name='[cabin_staff_service]' role='measure' type='quantitative' />
      <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='Date Published' datatype='datetime' name='[datePublished]' role='dimension' type='ordinal' />
      <column caption='Date Flown' datatype='string' name='[date_flown]' role='dimension' type='nominal' />
      <column caption='Departure City' datatype='string' name='[departure_city]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column caption='Food And Beverages' datatype='integer' name='[food_and_beverages]' role='measure' type='quantitative' />
      <column caption='Ground Service' datatype='integer' name='[ground_service]' role='measure' type='quantitative' />
      <column caption='Rating Value' datatype='integer' name='[ratingValue]' role='measure' type='quantitative' />
      <column caption='Recommended' datatype='string' name='[recommended]' role='dimension' type='nominal' />
      <column caption='Review Text' datatype='string' name='[reviewText]' role='dimension' type='nominal' />
      <column caption='Route' datatype='string' name='[route]' role='dimension' type='nominal' />
      <column caption='Scale' datatype='boolean' name='[scale]' role='dimension' type='nominal' />
      <column caption='Seat Comfort' datatype='integer' name='[seat_comfort]' role='measure' type='quantitative' />
      <column aggregation='CountD' caption='Sentiment Conclusion' datatype='string' name='[sentimentConclusion]' role='dimension' type='nominal' />
      <column caption='Sentiment Index Com' datatype='real' name='[sentimentIndexCom]' role='measure' type='quantitative' />
      <column caption='Sentiment Index Neg' datatype='real' name='[sentimentIndexNeg]' role='measure' type='quantitative' />
      <column caption='Sentiment Index Neu' datatype='real' name='[sentimentIndexNeu]' role='measure' type='quantitative' />
      <column caption='Sentiment Index Pos' datatype='real' name='[sentimentIndexPos]' role='measure' type='quantitative' />
      <column caption='Type Of Traveller' datatype='string' name='[type_of_traveller]' role='dimension' type='nominal' />
      <column caption='Value For Money' datatype='integer' name='[value_for_money]' role='measure' type='quantitative' />
      <column-instance column='[sentimentConclusion]' derivation='None' name='[none:sentimentConclusion:nk]' pivot='key' type='nominal' />
      <column-instance column='[datePublished]' derivation='Year' name='[yr:datePublished:ok]' pivot='key' type='ordinal' />
      <group caption='AcciÃ³n (Airline)' hidden='true' name='[Action (Airline)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[airline]' />
        </groupfilter>
      </group>
      <group caption='AcciÃ³n (Cabin Flown)' hidden='true' name='[Action (Cabin Flown)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[cabin_flown]' />
        </groupfilter>
      </group>
      <group caption='AcciÃ³n (Country)' hidden='true' name='[Action (Country)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[country]' />
        </groupfilter>
      </group>
      <group caption='AcciÃ³n (AÃO(Date Published))' hidden='true' name='[Action (YEAR(Date Published))]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[yr:datePublished:ok]' />
        </groupfilter>
      </group>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[federated.0llw4420xxwu2615peoss0kqvk84].[:Measure Names]&#10;[none:sentimentConclusion:nk]' type='palette'>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;[federated.19jdxec19u98vg14kcmkj1kk54gz].[pcto:cnt:sentimentConclusion:qk]&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;[federated.19jdxec19u98vg14kcmkj1kk54gz].[cnt:sentimentConclusion:qk]&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;[federated.0llw4420xxwu2615peoss0kqvk84].[avg:ratingValue:qk]&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;[federated.0llw4420xxwu2615peoss0kqvk84].[avg:Calculation_498492210555817988:qk]&quot;</bucket>
            </map-pri>
          </encoding>
          <encoding attr='color' field='[none:sentimentConclusion:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>%many-values%</bucket>
            </map>
            <map to='#54a77b'>
              <bucket>&quot;Positive&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Negative&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;Neutral&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Colombia&quot;' />
      </semantic-values>
      <datasource-dependencies datasource='federated.0llw4420xxwu2615peoss0kqvk84' />
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='review' id='review_946FD714571045948B1F2EAB165D939F'>
            <properties context=''>
              <relation connection='mongodb_jdbc.0x27e641urs5s210tpm7o0z9u57m' name='review' table='[review]' type='table' />
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <actions>
    <action caption='Filtro 1 (generado)' name='[Action1_CF1BEBE457574DF79146E8BA7D069A06]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard' type='sheet' worksheet='Pie Chart' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard' />
      </command>
    </action>
    <action caption='Filtro 2 (generado)' name='[Action2_8E424F1A8E764A5992453285A260CB3A]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard' type='sheet' worksheet='Map' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard' />
      </command>
    </action>
    <action caption='Filtro 3 (generado)' name='[Action3_F05584F5D9844EE180B646A062BBF725]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard' type='sheet' worksheet='Summary Table' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard' />
      </command>
    </action>
    <action caption='Filtro 4 (generado)' name='[Action4_63A779E7726F43F6AFFFFF3724DEC0D5]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard' type='sheet' worksheet='Bar Chart_Cabin' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard' />
      </command>
    </action>
    <action caption='Filtro 5 (generado)' name='[Action5_15B9FD8D51A34882A70152E72FA17086]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard' type='sheet' worksheet='Bar Char_Traveler' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard' />
      </command>
    </action>
    <action caption='Filtro 6 (generado)' name='[Action6_3815662046A348B5A5FC037432D433C3]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard' type='sheet' worksheet='Date_Rating' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard' />
      </command>
    </action>
    <action caption='Filtro 7 (generado)' name='[Action7_7588B440A6A84167B612BCBE0F9144FA]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard' type='sheet' worksheet='Bar_Airline' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard' />
      </command>
    </action>
    <action caption='Filtro 8 (generado)' name='[Action8_2DF5FDFAD7684323AABE66213542DC20]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard' type='sheet' worksheet='Sentiment Analysis' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='Bar Char_Traveler'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true'>Avg Rating Per Type of Traveler</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='reviews (airlines)' name='federated.0llw4420xxwu2615peoss0kqvk84' />
            <datasource caption='ParÃ¡metros' name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Choose The Service' datatype='string' name='[ParÃ¡metro 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Total Avg Rating&quot;'>
              <calculation class='tableau' formula='&quot;Total Avg Rating&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0llw4420xxwu2615peoss0kqvk84'>
            <column caption='Choosen Service' datatype='integer' default-format='n#,##0.0;-#,##0.0' name='[Calculation_498492210555817988]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='CASE [Parameters].[ParÃ¡metro 1]&#13;&#10;WHEN &quot;Seat Comfort&quot; THEN [seat_comfort]&#13;&#10;WHEN &quot;Cabin Staff Service&quot; THEN [cabin_staff_service]&#13;&#10;WHEN &quot;Food and Beverages&quot; THEN [food_and_beverages]&#13;&#10;WHEN &quot;Ground Service&quot; THEN [ground_service]&#13;&#10;WHEN &quot;Value For Money&quot; THEN [value_for_money]&#13;&#10;WHEN &quot;Total Avg Rating&quot; THEN [ratingValue]&#13;&#10;END' />
            </column>
            <column caption='Airline' datatype='string' name='[airline]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_498492210555817988]' derivation='Avg' name='[avg:Calculation_498492210555817988:qk]' pivot='key' type='quantitative' />
            <column-instance column='[ratingValue]' derivation='Avg' name='[avg:ratingValue:qk]' pivot='key' type='quantitative' />
            <column caption='Cabin Flown' datatype='string' name='[cabin_flown]' role='dimension' type='nominal' />
            <column caption='Cabin Staff Service' datatype='integer' name='[cabin_staff_service]' role='measure' type='quantitative' />
            <column-instance column='[type_of_traveller]' derivation='Count' name='[cnt:type_of_traveller:qk]' pivot='key' type='quantitative' />
            <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Date Published' datatype='datetime' name='[datePublished]' role='dimension' type='ordinal' />
            <column caption='Food And Beverages' datatype='integer' name='[food_and_beverages]' role='measure' type='quantitative' />
            <column caption='Ground Service' datatype='integer' name='[ground_service]' role='measure' type='quantitative' />
            <column-instance column='[airline]' derivation='None' name='[none:airline:nk]' pivot='key' type='nominal' />
            <column-instance column='[cabin_flown]' derivation='None' name='[none:cabin_flown:nk]' pivot='key' type='nominal' />
            <column-instance column='[type_of_traveller]' derivation='None' name='[none:type_of_traveller:nk]' pivot='key' type='nominal' />
            <column caption='Rating Value' datatype='integer' default-format='n#,##0.0;-#,##0.0' name='[ratingValue]' role='measure' type='quantitative' />
            <column caption='Recommended' datatype='string' name='[recommended]' role='dimension' type='nominal' />
            <column caption='Seat Comfort' datatype='integer' name='[seat_comfort]' role='measure' type='quantitative' />
            <column caption='Type Of Traveller' datatype='string' name='[type_of_traveller]' role='dimension' type='nominal' />
            <column caption='Value For Money' datatype='integer' default-format='n#,##0.0;-#,##0.0' name='[value_for_money]' role='measure' type='quantitative' />
            <column-instance column='[datePublished]' derivation='Year' name='[yr:datePublished:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0llw4420xxwu2615peoss0kqvk84].[Action (Airline)]'>
            <groupfilter function='level-members' level='[airline]' user:ui-action-filter='[Action7_7588B440A6A84167B612BCBE0F9144FA]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0llw4420xxwu2615peoss0kqvk84].[Action (Airline,Recommended)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1_CF1BEBE457574DF79146E8BA7D069A06]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[airline]' />
              <groupfilter function='level-members' level='[recommended]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0llw4420xxwu2615peoss0kqvk84].[Action (Cabin Flown)]'>
            <groupfilter function='level-members' level='[cabin_flown]' user:ui-action-filter='[Action4_63A779E7726F43F6AFFFFF3724DEC0D5]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0llw4420xxwu2615peoss0kqvk84].[Action (Country)]'>
            <groupfilter function='level-members' level='[country]' user:ui-action-filter='[Action2_8E424F1A8E764A5992453285A260CB3A]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0llw4420xxwu2615peoss0kqvk84].[Action (YEAR(Date Published))]'>
            <groupfilter function='level-members' level='[yr:datePublished:ok]' user:ui-action-filter='[Action6_3815662046A348B5A5FC037432D433C3]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0llw4420xxwu2615peoss0kqvk84].[none:airline:nk]' filter-group='6'>
            <groupfilter function='level-members' level='[none:airline:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0llw4420xxwu2615peoss0kqvk84].[none:cabin_flown:nk]' filter-group='4'>
            <groupfilter function='level-members' level='[none:cabin_flown:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0llw4420xxwu2615peoss0kqvk84].[none:type_of_traveller:nk]'>
            <groupfilter expression='IFNULL(STR([type_of_traveller]), &apos;&apos;) &lt;&gt; &apos;&apos;' function='filter' user:ui-marker='filter-by'>
              <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
                <groupfilter function='level-members' level='[none:type_of_traveller:nk]' />
                <groupfilter function='empty-level' member='[none:type_of_traveller:nk]' />
              </groupfilter>
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0llw4420xxwu2615peoss0kqvk84].[none:type_of_traveller:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0llw4420xxwu2615peoss0kqvk84].[avg:ratingValue:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.0llw4420xxwu2615peoss0kqvk84].[none:airline:nk]</column>
            <column>[federated.0llw4420xxwu2615peoss0kqvk84].[none:cabin_flown:nk]</column>
            <column>[federated.0llw4420xxwu2615peoss0kqvk84].[none:type_of_traveller:nk]</column>
            <column>[federated.0llw4420xxwu2615peoss0kqvk84].[Action (Airline,Recommended)]</column>
            <column>[federated.0llw4420xxwu2615peoss0kqvk84].[Action (Country)]</column>
            <column>[federated.0llw4420xxwu2615peoss0kqvk84].[Action (Airline)]</column>
            <column>[federated.0llw4420xxwu2615peoss0kqvk84].[Action (YEAR(Date Published))]</column>
            <column>[federated.0llw4420xxwu2615peoss0kqvk84].[Action (Cabin Flown)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0llw4420xxwu2615peoss0kqvk84].[avg:ratingValue:qk]' palette='sunrise_sunset_diverging_10_0' reverse='true' type='interpolated' />
            <encoding attr='color' field='[federated.0llw4420xxwu2615peoss0kqvk84].[avg:Calculation_498492210555817988:qk]' palette='sunrise_sunset_diverging_10_0' reverse='true' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0llw4420xxwu2615peoss0kqvk84].[avg:Calculation_498492210555817988:qk]' />
              <text column='[federated.0llw4420xxwu2615peoss0kqvk84].[avg:Calculation_498492210555817988:qk]' />
              <text column='[federated.0llw4420xxwu2615peoss0kqvk84].[cnt:type_of_traveller:qk]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run><![CDATA[<[federated.0llw4420xxwu2615peoss0kqvk84].[avg:Calculation_498492210555817988:qk]>
]]></run>
                <run bold='false' fontsize='8' italic='true'><![CDATA[#<[federated.0llw4420xxwu2615peoss0kqvk84].[cnt:type_of_traveller:qk]>]]></run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='match' />
                <format attr='font-family' value='Microsoft YaHei' />
                <format attr='font-weight' value='bold' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0llw4420xxwu2615peoss0kqvk84].[avg:Calculation_498492210555817988:qk]</rows>
        <cols>[federated.0llw4420xxwu2615peoss0kqvk84].[none:type_of_traveller:nk]</cols>
      </table>
      <simple-id uuid='{6F8C9121-FCAB-4749-B0A7-15458BC65F81}' />
    </worksheet>
    <worksheet name='Bar Chart_Cabin'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true'>Avg Rating Per Type of Cabin</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='reviews (airlines)' name='federated.0llw4420xxwu2615peoss0kqvk84' />
            <datasource caption='ParÃ¡metros' name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Choose The Service' datatype='string' name='[ParÃ¡metro 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Total Avg Rating&quot;'>
              <calculation class='tableau' formula='&quot;Total Avg Rating&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0llw4420xxwu2615peoss0kqvk84'>
            <column caption='Choosen Service' datatype='integer' default-format='n#,##0.0;-#,##0.0' name='[Calculation_498492210555817988]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='CASE [Parameters].[ParÃ¡metro 1]&#13;&#10;WHEN &quot;Seat Comfort&quot; THEN [seat_comfort]&#13;&#10;WHEN &quot;Cabin Staff Service&quot; THEN [cabin_staff_service]&#13;&#10;WHEN &quot;Food and Beverages&quot; THEN [food_and_beverages]&#13;&#10;WHEN &quot;Ground Service&quot; THEN [ground_service]&#13;&#10;WHEN &quot;Value For Money&quot; THEN [value_for_money]&#13;&#10;WHEN &quot;Total Avg Rating&quot; THEN [ratingValue]&#13;&#10;END' />
            </column>
            <column caption='Airline' datatype='string' name='[airline]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_498492210555817988]' derivation='Avg' name='[avg:Calculation_498492210555817988:qk]' pivot='key' type='quantitative' />
            <column-instance column='[ratingValue]' derivation='Avg' name='[avg:ratingValue:qk]' pivot='key' type='quantitative' />
            <column caption='Cabin Flown' datatype='string' name='[cabin_flown]' role='dimension' type='nominal' />
            <column caption='Cabin Staff Service' datatype='integer' name='[cabin_staff_service]' role='measure' type='quantitative' />
            <column-instance column='[cabin_flown]' derivation='Count' name='[cnt:cabin_flown:qk]' pivot='key' type='quantitative' />
            <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Date Published' datatype='datetime' name='[datePublished]' role='dimension' type='ordinal' />
            <column caption='Food And Beverages' datatype='integer' name='[food_and_beverages]' role='measure' type='quantitative' />
            <column caption='Ground Service' datatype='integer' name='[ground_service]' role='measure' type='quantitative' />
            <column-instance column='[airline]' derivation='None' name='[none:airline:nk]' pivot='key' type='nominal' />
            <column-instance column='[cabin_flown]' derivation='None' name='[none:cabin_flown:nk]' pivot='key' type='nominal' />
            <column-instance column='[type_of_traveller]' derivation='None' name='[none:type_of_traveller:nk]' pivot='key' type='nominal' />
            <column caption='Rating Value' datatype='integer' default-format='n#,##0.0;-#,##0.0' name='[ratingValue]' role='measure' type='quantitative' />
            <column caption='Recommended' datatype='string' name='[recommended]' role='dimension' type='nominal' />
            <column caption='Seat Comfort' datatype='integer' name='[seat_comfort]' role='measure' type='quantitative' />
            <column caption='Type Of Traveller' datatype='string' name='[type_of_traveller]' role='dimension' type='nominal' />
            <column caption='Value For Money' datatype='integer' default-format='n#,##0.0;-#,##0.0' name='[value_for_money]' role='measure' type='quantitative' />
            <column-instance column='[datePublished]' derivation='Year' name='[yr:datePublished:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0llw4420xxwu2615peoss0kqvk84].[Action (Airline)]'>
            <groupfilter function='level-members' level='[airline]' user:ui-action-filter='[Action7_7588B440A6A84167B612BCBE0F9144FA]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0llw4420xxwu2615peoss0kqvk84].[Action (Airline,Recommended)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1_CF1BEBE457574DF79146E8BA7D069A06]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[airline]' />
              <groupfilter function='level-members' level='[recommended]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0llw4420xxwu2615peoss0kqvk84].[Action (Country)]'>
            <groupfilter function='level-members' level='[country]' user:ui-action-filter='[Action2_8E424F1A8E764A5992453285A260CB3A]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0llw4420xxwu2615peoss0kqvk84].[Action (YEAR(Date Published))]'>
            <groupfilter function='level-members' level='[yr:datePublished:ok]' user:ui-action-filter='[Action6_3815662046A348B5A5FC037432D433C3]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0llw4420xxwu2615peoss0kqvk84].[none:airline:nk]' filter-group='6'>
            <groupfilter function='level-members' level='[none:airline:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0llw4420xxwu2615peoss0kqvk84].[none:cabin_flown:nk]'>
            <groupfilter expression='IFNULL(STR([cabin_flown]), &apos;&apos;) &lt;&gt; &apos;&apos;' function='filter' user:ui-marker='filter-by'>
              <groupfilter function='level-members' level='[none:cabin_flown:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0llw4420xxwu2615peoss0kqvk84].[none:type_of_traveller:nk]' filter-group='5'>
            <groupfilter function='level-members' level='[none:type_of_traveller:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0llw4420xxwu2615peoss0kqvk84].[none:cabin_flown:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0llw4420xxwu2615peoss0kqvk84].[avg:ratingValue:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.0llw4420xxwu2615peoss0kqvk84].[none:airline:nk]</column>
            <column>[federated.0llw4420xxwu2615peoss0kqvk84].[none:type_of_traveller:nk]</column>
            <column>[federated.0llw4420xxwu2615peoss0kqvk84].[Action (Airline,Recommended)]</column>
            <column>[federated.0llw4420xxwu2615peoss0kqvk84].[Action (Country)]</column>
            <column>[federated.0llw4420xxwu2615peoss0kqvk84].[Action (Airline)]</column>
            <column>[federated.0llw4420xxwu2615peoss0kqvk84].[none:cabin_flown:nk]</column>
            <column>[federated.0llw4420xxwu2615peoss0kqvk84].[Action (YEAR(Date Published))]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0llw4420xxwu2615peoss0kqvk84].[avg:ratingValue:qk]' palette='sunrise_sunset_diverging_10_0' reverse='true' type='interpolated' />
            <encoding attr='color' field='[federated.0llw4420xxwu2615peoss0kqvk84].[avg:Calculation_498492210555817988:qk]' palette='sunrise_sunset_diverging_10_0' reverse='true' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0llw4420xxwu2615peoss0kqvk84].[avg:Calculation_498492210555817988:qk]' />
              <text column='[federated.0llw4420xxwu2615peoss0kqvk84].[avg:Calculation_498492210555817988:qk]' />
              <text column='[federated.0llw4420xxwu2615peoss0kqvk84].[cnt:cabin_flown:qk]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run><![CDATA[<[federated.0llw4420xxwu2615peoss0kqvk84].[avg:Calculation_498492210555817988:qk]>
]]></run>
                <run bold='false' fontsize='8' italic='true'><![CDATA[#<[federated.0llw4420xxwu2615peoss0kqvk84].[cnt:cabin_flown:qk]>]]></run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='match' />
                <format attr='font-weight' value='bold' />
                <format attr='font-size' value='9' />
                <format attr='font-family' value='Microsoft YaHei' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-color' value='#606b76' />
                <format attr='mark-labels-range-scope' value='cell' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0llw4420xxwu2615peoss0kqvk84].[avg:Calculation_498492210555817988:qk]</rows>
        <cols>[federated.0llw4420xxwu2615peoss0kqvk84].[none:cabin_flown:nk]</cols>
      </table>
      <simple-id uuid='{179994B3-93ED-4316-BC29-5CF7D6F93D9E}' />
    </worksheet>
    <worksheet name='Bar_Airline'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true'>Avg Rating Per Airline</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='reviews (airlines)' name='federated.0llw4420xxwu2615peoss0kqvk84' />
            <datasource caption='ParÃ¡metros' name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Choose The Service' datatype='string' name='[ParÃ¡metro 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Total Avg Rating&quot;'>
              <calculation class='tableau' formula='&quot;Total Avg Rating&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0llw4420xxwu2615peoss0kqvk84'>
            <column caption='Choosen Service' datatype='integer' default-format='n#,##0.0;-#,##0.0' name='[Calculation_498492210555817988]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='CASE [Parameters].[ParÃ¡metro 1]&#13;&#10;WHEN &quot;Seat Comfort&quot; THEN [seat_comfort]&#13;&#10;WHEN &quot;Cabin Staff Service&quot; THEN [cabin_staff_service]&#13;&#10;WHEN &quot;Food and Beverages&quot; THEN [food_and_beverages]&#13;&#10;WHEN &quot;Ground Service&quot; THEN [ground_service]&#13;&#10;WHEN &quot;Value For Money&quot; THEN [value_for_money]&#13;&#10;WHEN &quot;Total Avg Rating&quot; THEN [ratingValue]&#13;&#10;END' />
            </column>
            <column caption='Airline' datatype='string' name='[airline]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_498492210555817988]' derivation='Avg' name='[avg:Calculation_498492210555817988:qk]' pivot='key' type='quantitative' />
            <column caption='Cabin Flown' datatype='string' name='[cabin_flown]' role='dimension' type='nominal' />
            <column caption='Cabin Staff Service' datatype='integer' name='[cabin_staff_service]' role='measure' type='quantitative' />
            <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Date Published' datatype='datetime' name='[datePublished]' role='dimension' type='ordinal' />
            <column caption='Food And Beverages' datatype='integer' name='[food_and_beverages]' role='measure' type='quantitative' />
            <column caption='Ground Service' datatype='integer' name='[ground_service]' role='measure' type='quantitative' />
            <column-instance column='[airline]' derivation='None' name='[none:airline:nk]' pivot='key' type='nominal' />
            <column caption='Rating Value' datatype='integer' default-format='n#,##0.0;-#,##0.0' name='[ratingValue]' role='measure' type='quantitative' />
            <column caption='Recommended' datatype='string' name='[recommended]' role='dimension' type='nominal' />
            <column caption='Seat Comfort' datatype='integer' name='[seat_comfort]' role='measure' type='quantitative' />
            <column caption='Value For Money' datatype='integer' default-format='n#,##0.0;-#,##0.0' name='[value_for_money]' role='measure' type='quantitative' />
            <column-instance column='[datePublished]' derivation='Year' name='[yr:datePublished:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0llw4420xxwu2615peoss0kqvk84].[Action (Airline,Recommended)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1_CF1BEBE457574DF79146E8BA7D069A06]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[airline]' />
              <groupfilter function='level-members' level='[recommended]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0llw4420xxwu2615peoss0kqvk84].[Action (Cabin Flown)]'>
            <groupfilter function='level-members' level='[cabin_flown]' user:ui-action-filter='[Action4_63A779E7726F43F6AFFFFF3724DEC0D5]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0llw4420xxwu2615peoss0kqvk84].[Action (Country)]'>
            <groupfilter function='level-members' level='[country]' user:ui-action-filter='[Action2_8E424F1A8E764A5992453285A260CB3A]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0llw4420xxwu2615peoss0kqvk84].[Action (YEAR(Date Published))]'>
            <groupfilter function='level-members' level='[yr:datePublished:ok]' user:ui-action-filter='[Action6_3815662046A348B5A5FC037432D433C3]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0llw4420xxwu2615peoss0kqvk84].[none:airline:nk]' filter-group='6'>
            <groupfilter function='level-members' level='[none:airline:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0llw4420xxwu2615peoss0kqvk84].[none:airline:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0llw4420xxwu2615peoss0kqvk84].[avg:Calculation_498492210555817988:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.0llw4420xxwu2615peoss0kqvk84].[none:airline:nk]</column>
            <column>[federated.0llw4420xxwu2615peoss0kqvk84].[Action (Airline,Recommended)]</column>
            <column>[federated.0llw4420xxwu2615peoss0kqvk84].[Action (Country)]</column>
            <column>[federated.0llw4420xxwu2615peoss0kqvk84].[Action (YEAR(Date Published))]</column>
            <column>[federated.0llw4420xxwu2615peoss0kqvk84].[Action (Cabin Flown)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='header'>
            <format attr='height-header' value='21' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0llw4420xxwu2615peoss0kqvk84].[avg:Calculation_498492210555817988:qk]' palette='sunrise_sunset_diverging_10_0' reverse='true' type='interpolated' />
          </style-rule>
          <style-rule element='table'>
            <format attr='omit-on-special' field='[federated.0llw4420xxwu2615peoss0kqvk84].[avg:Calculation_498492210555817988:qk]' value='false' />
            <format attr='break-on-special' field='[federated.0llw4420xxwu2615peoss0kqvk84].[avg:Calculation_498492210555817988:qk]' value='false' />
            <format attr='show-null-value-warning' field='[federated.0llw4420xxwu2615peoss0kqvk84].[avg:Calculation_498492210555817988:qk]' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0llw4420xxwu2615peoss0kqvk84].[avg:Calculation_498492210555817988:qk]' />
              <text column='[federated.0llw4420xxwu2615peoss0kqvk84].[avg:Calculation_498492210555817988:qk]' />
            </encodings>
            <style>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='match' />
                <format attr='font-family' value='Microsoft YaHei' />
                <format attr='font-weight' value='bold' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0llw4420xxwu2615peoss0kqvk84].[avg:Calculation_498492210555817988:qk]</rows>
        <cols>[federated.0llw4420xxwu2615peoss0kqvk84].[none:airline:nk]</cols>
      </table>
      <simple-id uuid='{235DDC41-BA5A-46EA-8A21-16042C880084}' />
    </worksheet>
    <worksheet name='Bar_Recommended'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true'>Bar Chart Recommended</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='reviews (airlines)' name='federated.0llw4420xxwu2615peoss0kqvk84' />
          </datasources>
          <datasource-dependencies datasource='federated.0llw4420xxwu2615peoss0kqvk84'>
            <column caption='Airline' datatype='string' name='[airline]' role='dimension' type='nominal' />
            <column-instance column='[recommended]' derivation='Count' name='[cnt:recommended:qk]' pivot='key' type='quantitative' />
            <column-instance column='[airline]' derivation='None' name='[none:airline:nk]' pivot='key' type='nominal' />
            <column-instance column='[recommended]' derivation='None' name='[none:recommended:nk]' pivot='key' type='nominal' />
            <column-instance column='[recommended]' derivation='Count' name='[pcto:cnt:recommended:qk:2]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[federated.0llw4420xxwu2615peoss0kqvk84].[recommended]' ordering-type='Field' type='PctTotal' />
            </column-instance>
            <column caption='Recommended' datatype='string' name='[recommended]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.0llw4420xxwu2615peoss0kqvk84].[cnt:recommended:qk]' included-values='in-range'>
            <min>1</min>
            <max>5816</max>
          </filter>
          <filter class='categorical' column='[federated.0llw4420xxwu2615peoss0kqvk84].[none:airline:nk]' filter-group='6'>
            <groupfilter function='level-members' level='[none:airline:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0llw4420xxwu2615peoss0kqvk84].[none:airline:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0llw4420xxwu2615peoss0kqvk84].[cnt:recommended:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.0llw4420xxwu2615peoss0kqvk84].[none:airline:nk]</column>
            <column>[federated.0llw4420xxwu2615peoss0kqvk84].[cnt:recommended:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0llw4420xxwu2615peoss0kqvk84].[none:recommended:nk]' />
              <text column='[federated.0llw4420xxwu2615peoss0kqvk84].[pcto:cnt:recommended:qk:2]' />
            </encodings>
            <style>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='user' />
                <format attr='font-family' value='Microsoft Sans Serif' />
                <format attr='font-weight' value='bold' />
                <format attr='color' value='#333333' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0llw4420xxwu2615peoss0kqvk84].[none:airline:nk]</rows>
        <cols>[federated.0llw4420xxwu2615peoss0kqvk84].[cnt:recommended:qk]</cols>
      </table>
      <simple-id uuid='{2B537D16-29D6-457D-9FAE-4956A6F6CDD3}' />
    </worksheet>
    <worksheet name='Date_Rating'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true'>Avg Rating Per Year</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='reviews (airlines)' name='federated.0llw4420xxwu2615peoss0kqvk84' />
            <datasource caption='ParÃ¡metros' name='Parameters' />
            <datasource caption='review (airline)' name='federated.19jdxec19u98vg14kcmkj1kk54gz' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Choose The Service' datatype='string' name='[ParÃ¡metro 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Total Avg Rating&quot;'>
              <calculation class='tableau' formula='&quot;Total Avg Rating&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0llw4420xxwu2615peoss0kqvk84'>
            <column caption='Choosen Service' datatype='integer' default-format='n#,##0.0;-#,##0.0' name='[Calculation_498492210555817988]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='CASE [Parameters].[ParÃ¡metro 1]&#13;&#10;WHEN &quot;Seat Comfort&quot; THEN [seat_comfort]&#13;&#10;WHEN &quot;Cabin Staff Service&quot; THEN [cabin_staff_service]&#13;&#10;WHEN &quot;Food and Beverages&quot; THEN [food_and_beverages]&#13;&#10;WHEN &quot;Ground Service&quot; THEN [ground_service]&#13;&#10;WHEN &quot;Value For Money&quot; THEN [value_for_money]&#13;&#10;WHEN &quot;Total Avg Rating&quot; THEN [ratingValue]&#13;&#10;END' />
            </column>
            <column caption='Airline' datatype='string' name='[airline]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_498492210555817988]' derivation='Avg' name='[avg:Calculation_498492210555817988:qk]' pivot='key' type='quantitative' />
            <column-instance column='[ratingValue]' derivation='Avg' name='[avg:ratingValue:qk]' pivot='key' type='quantitative' />
            <column caption='Cabin Flown' datatype='string' name='[cabin_flown]' role='dimension' type='nominal' />
            <column caption='Cabin Staff Service' datatype='integer' name='[cabin_staff_service]' role='measure' type='quantitative' />
            <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Date Published' datatype='datetime' name='[datePublished]' role='dimension' type='ordinal' />
            <column caption='Food And Beverages' datatype='integer' name='[food_and_beverages]' role='measure' type='quantitative' />
            <column caption='Ground Service' datatype='integer' name='[ground_service]' role='measure' type='quantitative' />
            <column-instance column='[airline]' derivation='None' name='[none:airline:nk]' pivot='key' type='nominal' />
            <column caption='Rating Value' datatype='integer' default-format='n#,##0.0;-#,##0.0' name='[ratingValue]' role='measure' type='quantitative' />
            <column caption='Recommended' datatype='string' name='[recommended]' role='dimension' type='nominal' />
            <column caption='Seat Comfort' datatype='integer' name='[seat_comfort]' role='measure' type='quantitative' />
            <column caption='Value For Money' datatype='integer' default-format='n#,##0.0;-#,##0.0' name='[value_for_money]' role='measure' type='quantitative' />
            <column-instance column='[datePublished]' derivation='Year' name='[yr:datePublished:ok]' pivot='key' type='ordinal' />
            <column-instance column='[datePublished]' derivation='Year' name='[yr:datePublished:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.19jdxec19u98vg14kcmkj1kk54gz'>
            <column-instance column='[sentimentConclusion]' derivation='None' name='[none:sentimentConclusion:nk]' pivot='key' type='nominal' />
            <column aggregation='CountD' caption='Sentiment Conclusion' datatype='string' name='[sentimentConclusion]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0llw4420xxwu2615peoss0kqvk84].[Action (Airline)]'>
            <groupfilter function='level-members' level='[airline]' user:ui-action-filter='[Action7_7588B440A6A84167B612BCBE0F9144FA]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0llw4420xxwu2615peoss0kqvk84].[Action (Airline,Recommended)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1_CF1BEBE457574DF79146E8BA7D069A06]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[airline]' />
              <groupfilter function='level-members' level='[recommended]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0llw4420xxwu2615peoss0kqvk84].[Action (Cabin Flown)]'>
            <groupfilter function='level-members' level='[cabin_flown]' user:ui-action-filter='[Action4_63A779E7726F43F6AFFFFF3724DEC0D5]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0llw4420xxwu2615peoss0kqvk84].[Action (Country)]'>
            <groupfilter function='level-members' level='[country]' user:ui-action-filter='[Action2_8E424F1A8E764A5992453285A260CB3A]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0llw4420xxwu2615peoss0kqvk84].[Action (YEAR(Date Published))]'>
            <groupfilter function='level-members' level='[yr:datePublished:ok]' user:ui-action-filter='[Action8_2DF5FDFAD7684323AABE66213542DC20]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.0llw4420xxwu2615peoss0kqvk84].[avg:Calculation_498492210555817988:qk]' included-values='non-null' />
          <filter class='categorical' column='[federated.0llw4420xxwu2615peoss0kqvk84].[none:airline:nk]' filter-group='6'>
            <groupfilter function='level-members' level='[none:airline:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0llw4420xxwu2615peoss0kqvk84].[yr:datePublished:ok]'>
            <groupfilter function='level-members' level='[yr:datePublished:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.19jdxec19u98vg14kcmkj1kk54gz].[none:sentimentConclusion:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:sentimentConclusion:nk]' />
              <groupfilter function='member' level='[none:sentimentConclusion:nk]' member='%null%' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0llw4420xxwu2615peoss0kqvk84].[yr:datePublished:ok]</column>
            <column>[federated.0llw4420xxwu2615peoss0kqvk84].[none:airline:nk]</column>
            <column>[federated.0llw4420xxwu2615peoss0kqvk84].[Action (Airline,Recommended)]</column>
            <column>[federated.0llw4420xxwu2615peoss0kqvk84].[Action (Country)]</column>
            <column>[federated.0llw4420xxwu2615peoss0kqvk84].[Action (Airline)]</column>
            <column>[federated.19jdxec19u98vg14kcmkj1kk54gz].[none:sentimentConclusion:nk]</column>
            <column>[federated.0llw4420xxwu2615peoss0kqvk84].[Action (Cabin Flown)]</column>
            <column>[federated.0llw4420xxwu2615peoss0kqvk84].[Action (YEAR(Date Published))]</column>
            <column>[federated.0llw4420xxwu2615peoss0kqvk84].[avg:Calculation_498492210555817988:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0llw4420xxwu2615peoss0kqvk84].[avg:ratingValue:qk]' field-type='quantitative' fold='true' scope='rows' type='space' />
          </style-rule>
          <style-rule element='table'>
            <format attr='omit-on-special' field='[federated.0llw4420xxwu2615peoss0kqvk84].[avg:Calculation_498492210555817988:qk]' value='false' />
            <format attr='break-on-special' field='[federated.0llw4420xxwu2615peoss0kqvk84].[avg:Calculation_498492210555817988:qk]' value='false' />
            <format attr='show-null-value-warning' field='[federated.0llw4420xxwu2615peoss0kqvk84].[avg:Calculation_498492210555817988:qk]' value='false' />
            <format attr='omit-on-special' field='[federated.0llw4420xxwu2615peoss0kqvk84].[avg:ratingValue:qk]' value='false' />
            <format attr='break-on-special' field='[federated.0llw4420xxwu2615peoss0kqvk84].[avg:ratingValue:qk]' value='false' />
            <format attr='show-null-value-warning' field='[federated.0llw4420xxwu2615peoss0kqvk84].[avg:ratingValue:qk]' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.0llw4420xxwu2615peoss0kqvk84].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='match' />
                <format attr='font-family' value='Microsoft YaHei' />
                <format attr='font-weight' value='bold' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-color' value='#76b7b2' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0llw4420xxwu2615peoss0kqvk84].[avg:Calculation_498492210555817988:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.0llw4420xxwu2615peoss0kqvk84].[:Measure Names]' />
              <text column='[federated.0llw4420xxwu2615peoss0kqvk84].[avg:Calculation_498492210555817988:qk]' />
            </encodings>
            <style>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='match' />
                <format attr='font-family' value='Microsoft YaHei' />
                <format attr='font-weight' value='bold' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-color' value='#76b7b2' />
                <format attr='mark-markers-mode' value='all' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0llw4420xxwu2615peoss0kqvk84].[avg:ratingValue:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.0llw4420xxwu2615peoss0kqvk84].[:Measure Names]' />
              <text column='[federated.0llw4420xxwu2615peoss0kqvk84].[avg:ratingValue:qk]' />
            </encodings>
            <style>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='match' />
                <format attr='font-family' value='Microsoft YaHei' />
                <format attr='font-weight' value='bold' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-color' value='#76b7b2' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0llw4420xxwu2615peoss0kqvk84].[avg:Calculation_498492210555817988:qk] + [federated.0llw4420xxwu2615peoss0kqvk84].[avg:ratingValue:qk])</rows>
        <cols>[federated.0llw4420xxwu2615peoss0kqvk84].[yr:datePublished:qk]</cols>
      </table>
      <simple-id uuid='{CAAD2C11-3415-47F1-AF31-C6A9EBE281F1}' />
    </worksheet>
    <worksheet name='Map'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true'>Statistics by Country</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='reviews (airlines)' name='federated.0llw4420xxwu2615peoss0kqvk84' />
            <datasource caption='ParÃ¡metros' name='Parameters' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Choose The Service' datatype='string' name='[ParÃ¡metro 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Total Avg Rating&quot;'>
              <calculation class='tableau' formula='&quot;Total Avg Rating&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0llw4420xxwu2615peoss0kqvk84'>
            <column caption='Choosen Service' datatype='integer' default-format='n#,##0.0;-#,##0.0' name='[Calculation_498492210555817988]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='CASE [Parameters].[ParÃ¡metro 1]&#13;&#10;WHEN &quot;Seat Comfort&quot; THEN [seat_comfort]&#13;&#10;WHEN &quot;Cabin Staff Service&quot; THEN [cabin_staff_service]&#13;&#10;WHEN &quot;Food and Beverages&quot; THEN [food_and_beverages]&#13;&#10;WHEN &quot;Ground Service&quot; THEN [ground_service]&#13;&#10;WHEN &quot;Value For Money&quot; THEN [value_for_money]&#13;&#10;WHEN &quot;Total Avg Rating&quot; THEN [ratingValue]&#13;&#10;END' />
            </column>
            <column caption='Airline' datatype='string' name='[airline]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_498492210555817988]' derivation='Avg' name='[avg:Calculation_498492210555817988:qk]' pivot='key' type='quantitative' />
            <column caption='Cabin Flown' datatype='string' name='[cabin_flown]' role='dimension' type='nominal' />
            <column caption='Cabin Staff Service' datatype='integer' name='[cabin_staff_service]' role='measure' type='quantitative' />
            <column-instance column='[ratingValue]' derivation='Count' name='[cnt:ratingValue:qk]' pivot='key' type='quantitative' />
            <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Date Published' datatype='datetime' name='[datePublished]' role='dimension' type='ordinal' />
            <column caption='Food And Beverages' datatype='integer' name='[food_and_beverages]' role='measure' type='quantitative' />
            <column caption='Ground Service' datatype='integer' name='[ground_service]' role='measure' type='quantitative' />
            <column-instance column='[airline]' derivation='None' name='[none:airline:nk]' pivot='key' type='nominal' />
            <column-instance column='[cabin_flown]' derivation='None' name='[none:cabin_flown:nk]' pivot='key' type='nominal' />
            <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
            <column-instance column='[type_of_traveller]' derivation='None' name='[none:type_of_traveller:nk]' pivot='key' type='nominal' />
            <column caption='Rating Value' datatype='integer' default-format='n#,##0.0;-#,##0.0' name='[ratingValue]' role='measure' type='quantitative' />
            <column caption='Recommended' datatype='string' name='[recommended]' role='dimension' type='nominal' />
            <column caption='Seat Comfort' datatype='integer' name='[seat_comfort]' role='measure' type='quantitative' />
            <column caption='Type Of Traveller' datatype='string' name='[type_of_traveller]' role='dimension' type='nominal' />
            <column caption='Value For Money' datatype='integer' default-format='n#,##0.0;-#,##0.0' name='[value_for_money]' role='measure' type='quantitative' />
            <column-instance column='[datePublished]' derivation='Year' name='[yr:datePublished:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0llw4420xxwu2615peoss0kqvk84].[Action (Airline)]'>
            <groupfilter function='level-members' level='[airline]' user:ui-action-filter='[Action7_7588B440A6A84167B612BCBE0F9144FA]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0llw4420xxwu2615peoss0kqvk84].[Action (Airline,Recommended)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1_CF1BEBE457574DF79146E8BA7D069A06]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[airline]' />
              <groupfilter function='level-members' level='[recommended]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0llw4420xxwu2615peoss0kqvk84].[Action (Cabin Flown)]'>
            <groupfilter function='level-members' level='[cabin_flown]' user:ui-action-filter='[Action4_63A779E7726F43F6AFFFFF3724DEC0D5]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0llw4420xxwu2615peoss0kqvk84].[Action (YEAR(Date Published))]'>
            <groupfilter function='level-members' level='[yr:datePublished:ok]' user:ui-action-filter='[Action6_3815662046A348B5A5FC037432D433C3]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.0llw4420xxwu2615peoss0kqvk84].[Latitude (generated)]' included-values='non-null' />
          <filter class='quantitative' column='[federated.0llw4420xxwu2615peoss0kqvk84].[Longitude (generated)]' included-values='in-range'>
            <min>-175.19</min>
            <max>178.67580000000001</max>
          </filter>
          <filter class='quantitative' column='[federated.0llw4420xxwu2615peoss0kqvk84].[avg:Calculation_498492210555817988:qk]' included-values='all' />
          <filter class='quantitative' column='[federated.0llw4420xxwu2615peoss0kqvk84].[cnt:ratingValue:qk]' included-values='in-range'>
            <min>1</min>
            <max>29304</max>
          </filter>
          <filter class='categorical' column='[federated.0llw4420xxwu2615peoss0kqvk84].[none:airline:nk]' filter-group='6'>
            <groupfilter function='level-members' level='[none:airline:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0llw4420xxwu2615peoss0kqvk84].[none:cabin_flown:nk]' filter-group='4'>
            <groupfilter function='level-members' level='[none:cabin_flown:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0llw4420xxwu2615peoss0kqvk84].[none:type_of_traveller:nk]' filter-group='5'>
            <groupfilter function='level-members' level='[none:type_of_traveller:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0llw4420xxwu2615peoss0kqvk84].[Longitude (generated)]</column>
            <column>[federated.0llw4420xxwu2615peoss0kqvk84].[cnt:ratingValue:qk]</column>
            <column>[federated.0llw4420xxwu2615peoss0kqvk84].[none:airline:nk]</column>
            <column>[federated.0llw4420xxwu2615peoss0kqvk84].[none:cabin_flown:nk]</column>
            <column>[federated.0llw4420xxwu2615peoss0kqvk84].[none:type_of_traveller:nk]</column>
            <column>[federated.0llw4420xxwu2615peoss0kqvk84].[avg:Calculation_498492210555817988:qk]</column>
            <column>[federated.0llw4420xxwu2615peoss0kqvk84].[Action (Airline,Recommended)]</column>
            <column>[federated.0llw4420xxwu2615peoss0kqvk84].[Action (Airline)]</column>
            <column>[federated.0llw4420xxwu2615peoss0kqvk84].[Action (YEAR(Date Published))]</column>
            <column>[federated.0llw4420xxwu2615peoss0kqvk84].[Action (Cabin Flown)]</column>
            <column>[federated.0llw4420xxwu2615peoss0kqvk84].[Latitude (generated)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0llw4420xxwu2615peoss0kqvk84].[Longitude (generated)]' field-type='quantitative' max='24250326.018596821' min='-24672506.759197209' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.0llw4420xxwu2615peoss0kqvk84].[Latitude (generated)]' field-type='quantitative' max='12168364.440588668' min='-6819641.0183057543' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0llw4420xxwu2615peoss0kqvk84].[avg:Calculation_498492210555817988:qk]' palette='red_green_diverging_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='table'>
            <format attr='omit-on-special' field='[federated.0llw4420xxwu2615peoss0kqvk84].[none:country:nk]' value='false' />
            <format attr='break-on-special' field='[federated.0llw4420xxwu2615peoss0kqvk84].[none:country:nk]' value='false' />
            <format attr='show-null-value-warning' field='[federated.0llw4420xxwu2615peoss0kqvk84].[none:country:nk]' value='false' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.0llw4420xxwu2615peoss0kqvk84].[avg:Calculation_498492210555817988:qk]' value='Avg'>
              <formatted-text>
                <run fontalignment='1'>Avg</run>
              </formatted-text>
            </format>
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='title' field='[federated.0llw4420xxwu2615peoss0kqvk84].[none:airline:nk]' value='Choose The Airline'>
              <formatted-text>
                <run bold='true' fontalignment='1' fontsize='11'>Choose The Airline</run>
              </formatted-text>
            </format>
            <format attr='title' field='[federated.0llw4420xxwu2615peoss0kqvk84].[avg:Calculation_498492210555817988:qk]' value='Filter Avg'>
              <formatted-text>
                <run fontalignment='1'>Filter Avg</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <tooltip column='[federated.0llw4420xxwu2615peoss0kqvk84].[cnt:ratingValue:qk]' />
              <lod column='[federated.0llw4420xxwu2615peoss0kqvk84].[none:country:nk]' />
              <color column='[federated.0llw4420xxwu2615peoss0kqvk84].[avg:Calculation_498492210555817988:qk]' />
              <text column='[federated.0llw4420xxwu2615peoss0kqvk84].[avg:Calculation_498492210555817988:qk]' />
              <geometry column='[federated.0llw4420xxwu2615peoss0kqvk84].[Geometry (generated)]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Country:&#9;</run>
                <run bold='true' fontsize='12'><![CDATA[<[federated.0llw4420xxwu2615peoss0kqvk84].[none:country:nk]>]]></run>
                <run>Ã&#10;</run>
                <run fontcolor='#787878'>Avg Rating: &#9;</run>
                <run fontcolor='#4e79a7' fontsize='11'><![CDATA[<[federated.0llw4420xxwu2615peoss0kqvk84].[avg:Calculation_498492210555817988:qk]>]]></run>
                <run fontcolor='#4e79a7'>Ã&#9;</run>
                <run>Ã&#10;</run>
                <run fontcolor='#787878'># Rating:&#9;</run>
                <run bold='true' fontcolor='#666666'><![CDATA[<[federated.0llw4420xxwu2615peoss0kqvk84].[cnt:ratingValue:qk]>]]></run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='auto' />
                <format attr='font-family' value='Microsoft YaHei' />
                <format attr='font-weight' value='bold' />
                <format attr='font-size' value='8' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0llw4420xxwu2615peoss0kqvk84].[Latitude (generated)]</rows>
        <cols>[federated.0llw4420xxwu2615peoss0kqvk84].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{C4845C36-76EF-403D-BB7E-871A3437ABB8}' />
    </worksheet>
    <worksheet name='Pie Chart'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true'>Pie Chart Recommended</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='reviews (airlines)' name='federated.0llw4420xxwu2615peoss0kqvk84' />
          </datasources>
          <datasource-dependencies datasource='federated.0llw4420xxwu2615peoss0kqvk84'>
            <column caption='Airline' datatype='string' name='[airline]' role='dimension' type='nominal' />
            <column caption='Cabin Flown' datatype='string' name='[cabin_flown]' role='dimension' type='nominal' />
            <column-instance column='[recommended]' derivation='Count' name='[cnt:recommended:qk]' pivot='key' type='quantitative' />
            <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Date Published' datatype='datetime' name='[datePublished]' role='dimension' type='ordinal' />
            <column-instance column='[airline]' derivation='None' name='[none:airline:nk]' pivot='key' type='nominal' />
            <column-instance column='[cabin_flown]' derivation='None' name='[none:cabin_flown:nk]' pivot='key' type='nominal' />
            <column-instance column='[recommended]' derivation='None' name='[none:recommended:nk]' pivot='key' type='nominal' />
            <column-instance column='[type_of_traveller]' derivation='None' name='[none:type_of_traveller:nk]' pivot='key' type='nominal' />
            <column-instance column='[recommended]' derivation='Count' name='[pcto:cnt:recommended:qk:2]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[federated.0llw4420xxwu2615peoss0kqvk84].[recommended]' ordering-type='Field' type='PctTotal' />
            </column-instance>
            <column caption='Recommended' datatype='string' name='[recommended]' role='dimension' type='nominal' />
            <column caption='Type Of Traveller' datatype='string' name='[type_of_traveller]' role='dimension' type='nominal' />
            <column-instance column='[datePublished]' derivation='Year' name='[yr:datePublished:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0llw4420xxwu2615peoss0kqvk84].[Action (Airline)]'>
            <groupfilter function='level-members' level='[airline]' user:ui-action-filter='[Action7_7588B440A6A84167B612BCBE0F9144FA]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0llw4420xxwu2615peoss0kqvk84].[Action (Airline,Recommended)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action3_F05584F5D9844EE180B646A062BBF725]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[airline]' />
              <groupfilter function='level-members' level='[recommended]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0llw4420xxwu2615peoss0kqvk84].[Action (Cabin Flown)]'>
            <groupfilter function='level-members' level='[cabin_flown]' user:ui-action-filter='[Action4_63A779E7726F43F6AFFFFF3724DEC0D5]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0llw4420xxwu2615peoss0kqvk84].[Action (Country)]'>
            <groupfilter function='level-members' level='[country]' user:ui-action-filter='[Action2_8E424F1A8E764A5992453285A260CB3A]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0llw4420xxwu2615peoss0kqvk84].[Action (YEAR(Date Published))]'>
            <groupfilter function='level-members' level='[yr:datePublished:ok]' user:ui-action-filter='[Action6_3815662046A348B5A5FC037432D433C3]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.0llw4420xxwu2615peoss0kqvk84].[cnt:recommended:qk]' included-values='in-range'>
            <min>1</min>
            <max>5816</max>
          </filter>
          <filter class='categorical' column='[federated.0llw4420xxwu2615peoss0kqvk84].[none:airline:nk]' filter-group='6'>
            <groupfilter function='level-members' level='[none:airline:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0llw4420xxwu2615peoss0kqvk84].[none:cabin_flown:nk]' filter-group='4'>
            <groupfilter function='level-members' level='[none:cabin_flown:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0llw4420xxwu2615peoss0kqvk84].[none:type_of_traveller:nk]' filter-group='5'>
            <groupfilter function='level-members' level='[none:type_of_traveller:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0llw4420xxwu2615peoss0kqvk84].[none:airline:nk]</column>
            <column>[federated.0llw4420xxwu2615peoss0kqvk84].[cnt:recommended:qk]</column>
            <column>[federated.0llw4420xxwu2615peoss0kqvk84].[none:cabin_flown:nk]</column>
            <column>[federated.0llw4420xxwu2615peoss0kqvk84].[none:type_of_traveller:nk]</column>
            <column>[federated.0llw4420xxwu2615peoss0kqvk84].[Action (Country)]</column>
            <column>[federated.0llw4420xxwu2615peoss0kqvk84].[Action (Airline)]</column>
            <column>[federated.0llw4420xxwu2615peoss0kqvk84].[Action (Airline,Recommended)]</column>
            <column>[federated.0llw4420xxwu2615peoss0kqvk84].[Action (YEAR(Date Published))]</column>
            <column>[federated.0llw4420xxwu2615peoss0kqvk84].[Action (Cabin Flown)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <encodings>
              <color column='[federated.0llw4420xxwu2615peoss0kqvk84].[none:recommended:nk]' />
              <wedge-size column='[federated.0llw4420xxwu2615peoss0kqvk84].[pcto:cnt:recommended:qk:2]' />
              <size column='[federated.0llw4420xxwu2615peoss0kqvk84].[pcto:cnt:recommended:qk:2]' />
              <text column='[federated.0llw4420xxwu2615peoss0kqvk84].[none:recommended:nk]' />
              <text column='[federated.0llw4420xxwu2615peoss0kqvk84].[pcto:cnt:recommended:qk:2]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run>&lt;</run>
                <run>[federated.0llw4420xxwu2615peoss0kqvk84].[none:recommended:nk]</run>
                <run>&gt;&#10;</run>
                <run><![CDATA[<[federated.0llw4420xxwu2615peoss0kqvk84].[pcto:cnt:recommended:qk:2]>]]></run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='match' />
                <format attr='font-weight' value='bold' />
                <format attr='font-size' value='9' />
                <format attr='font-family' value='Microsoft YaHei UI Light' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols>[federated.0llw4420xxwu2615peoss0kqvk84].[none:airline:nk]</cols>
      </table>
      <simple-id uuid='{7DFA5A90-062F-43C6-BB77-C4F758AE49AB}' />
    </worksheet>
    <worksheet name='Sentiment Analysis'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true'>Sentiment Analysis</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='review (airline)' name='federated.19jdxec19u98vg14kcmkj1kk54gz' />
          </datasources>
          <datasource-dependencies datasource='federated.19jdxec19u98vg14kcmkj1kk54gz'>
            <column caption='Airline' datatype='string' name='[airline]' role='dimension' type='nominal' />
            <column caption='Cabin Flown' datatype='string' name='[cabin_flown]' role='dimension' type='nominal' />
            <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Date Published' datatype='datetime' name='[datePublished]' role='dimension' type='ordinal' />
            <column-instance column='[sentimentConclusion]' derivation='None' name='[none:sentimentConclusion:nk]' pivot='key' type='nominal' />
            <column-instance column='[sentimentConclusion]' derivation='Count' name='[pcto:cnt:sentimentConclusion:qk:5]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[federated.19jdxec19u98vg14kcmkj1kk54gz].[sentimentConclusion]' ordering-type='Field' type='PctTotal' />
            </column-instance>
            <column aggregation='CountD' caption='Sentiment Conclusion' datatype='string' name='[sentimentConclusion]' role='dimension' type='nominal' />
            <column-instance column='[datePublished]' derivation='Year' name='[yr:datePublished:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.19jdxec19u98vg14kcmkj1kk54gz].[Action (Airline)]'>
            <groupfilter function='level-members' level='[airline]' user:ui-action-filter='[Action7_7588B440A6A84167B612BCBE0F9144FA]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.19jdxec19u98vg14kcmkj1kk54gz].[Action (Cabin Flown)]'>
            <groupfilter function='level-members' level='[cabin_flown]' user:ui-action-filter='[Action4_63A779E7726F43F6AFFFFF3724DEC0D5]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.19jdxec19u98vg14kcmkj1kk54gz].[Action (Country)]'>
            <groupfilter function='level-members' level='[country]' user:ui-action-filter='[Action2_8E424F1A8E764A5992453285A260CB3A]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.19jdxec19u98vg14kcmkj1kk54gz].[Action (YEAR(Date Published))]'>
            <groupfilter function='level-members' level='[yr:datePublished:ok]' user:ui-action-filter='[Action6_3815662046A348B5A5FC037432D433C3]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.19jdxec19u98vg14kcmkj1kk54gz].[none:sentimentConclusion:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:sentimentConclusion:nk]' />
              <groupfilter function='member' level='[none:sentimentConclusion:nk]' member='%null%' />
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.19jdxec19u98vg14kcmkj1kk54gz].[pcto:cnt:sentimentConclusion:qk:5]' included-values='non-null' />
          <slices>
            <column>[federated.19jdxec19u98vg14kcmkj1kk54gz].[none:sentimentConclusion:nk]</column>
            <column>[federated.19jdxec19u98vg14kcmkj1kk54gz].[pcto:cnt:sentimentConclusion:qk:5]</column>
            <column>[federated.19jdxec19u98vg14kcmkj1kk54gz].[Action (Airline)]</column>
            <column>[federated.19jdxec19u98vg14kcmkj1kk54gz].[Action (YEAR(Date Published))]</column>
            <column>[federated.19jdxec19u98vg14kcmkj1kk54gz].[Action (Cabin Flown)]</column>
            <column>[federated.19jdxec19u98vg14kcmkj1kk54gz].[Action (Country)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.19jdxec19u98vg14kcmkj1kk54gz].[none:sentimentConclusion:nk]' />
            </encodings>
            <style>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='match' />
                <format attr='font-weight' value='bold' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.19jdxec19u98vg14kcmkj1kk54gz].[pcto:cnt:sentimentConclusion:qk:5]</rows>
        <cols>[federated.19jdxec19u98vg14kcmkj1kk54gz].[yr:datePublished:ok]</cols>
      </table>
      <simple-id uuid='{332AB1F7-26AE-487E-8E3A-E68D0CE0F64A}' />
    </worksheet>
    <worksheet name='Summary Table'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true'>Summary</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='reviews (airlines)' name='federated.0llw4420xxwu2615peoss0kqvk84' />
            <datasource caption='ParÃ¡metros' name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Choose The Service' datatype='string' name='[ParÃ¡metro 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Total Avg Rating&quot;'>
              <calculation class='tableau' formula='&quot;Total Avg Rating&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0llw4420xxwu2615peoss0kqvk84'>
            <column caption='Choosen Service' datatype='integer' default-format='n#,##0.0;-#,##0.0' name='[Calculation_498492210555817988]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='CASE [Parameters].[ParÃ¡metro 1]&#13;&#10;WHEN &quot;Seat Comfort&quot; THEN [seat_comfort]&#13;&#10;WHEN &quot;Cabin Staff Service&quot; THEN [cabin_staff_service]&#13;&#10;WHEN &quot;Food and Beverages&quot; THEN [food_and_beverages]&#13;&#10;WHEN &quot;Ground Service&quot; THEN [ground_service]&#13;&#10;WHEN &quot;Value For Money&quot; THEN [value_for_money]&#13;&#10;WHEN &quot;Total Avg Rating&quot; THEN [ratingValue]&#13;&#10;END' />
            </column>
            <column caption='Airline' datatype='string' name='[airline]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_498492210555817988]' derivation='Avg' name='[avg:Calculation_498492210555817988:qk]' pivot='key' type='quantitative' />
            <column-instance column='[ratingValue]' derivation='Avg' name='[avg:ratingValue:qk]' pivot='key' type='quantitative' />
            <column caption='Cabin Flown' datatype='string' name='[cabin_flown]' role='dimension' type='nominal' />
            <column caption='Cabin Staff Service' datatype='integer' name='[cabin_staff_service]' role='measure' type='quantitative' />
            <column-instance column='[recommended]' derivation='Count' name='[cnt:recommended:qk]' pivot='key' type='quantitative' />
            <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Date Published' datatype='datetime' name='[datePublished]' role='dimension' type='ordinal' />
            <column caption='Food And Beverages' datatype='integer' name='[food_and_beverages]' role='measure' type='quantitative' />
            <column caption='Ground Service' datatype='integer' name='[ground_service]' role='measure' type='quantitative' />
            <column-instance column='[airline]' derivation='None' name='[none:airline:nk]' pivot='key' type='nominal' />
            <column-instance column='[recommended]' derivation='None' name='[none:recommended:nk]' pivot='key' type='nominal' />
            <column-instance column='[recommended]' derivation='Count' name='[pcto:cnt:recommended:qk:2]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[federated.0llw4420xxwu2615peoss0kqvk84].[recommended]' ordering-type='Field' type='PctTotal' />
            </column-instance>
            <column caption='Rating Value' datatype='integer' default-format='n#,##0.0;-#,##0.0' name='[ratingValue]' role='measure' type='quantitative' />
            <column caption='Recommended' datatype='string' name='[recommended]' role='dimension' type='nominal' />
            <column caption='Seat Comfort' datatype='integer' name='[seat_comfort]' role='measure' type='quantitative' />
            <column caption='Value For Money' datatype='integer' default-format='n#,##0.0;-#,##0.0' name='[value_for_money]' role='measure' type='quantitative' />
            <column-instance column='[datePublished]' derivation='Year' name='[yr:datePublished:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0llw4420xxwu2615peoss0kqvk84].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0llw4420xxwu2615peoss0kqvk84].[avg:ratingValue:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0llw4420xxwu2615peoss0kqvk84].[avg:Calculation_498492210555817988:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0llw4420xxwu2615peoss0kqvk84].[pcto:cnt:recommended:qk:2]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0llw4420xxwu2615peoss0kqvk84].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.0llw4420xxwu2615peoss0kqvk84].[avg:ratingValue:qk]&quot;</bucket>
              <bucket>&quot;[federated.0llw4420xxwu2615peoss0kqvk84].[avg:Calculation_498492210555817988:qk]&quot;</bucket>
              <bucket>&quot;[federated.0llw4420xxwu2615peoss0kqvk84].[pcto:cnt:recommended:qk:2]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.0llw4420xxwu2615peoss0kqvk84].[Action (Airline)]'>
            <groupfilter function='level-members' level='[airline]' user:ui-action-filter='[Action7_7588B440A6A84167B612BCBE0F9144FA]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0llw4420xxwu2615peoss0kqvk84].[Action (Airline,Recommended)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1_CF1BEBE457574DF79146E8BA7D069A06]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[airline]' />
              <groupfilter function='level-members' level='[recommended]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0llw4420xxwu2615peoss0kqvk84].[Action (Cabin Flown)]'>
            <groupfilter function='level-members' level='[cabin_flown]' user:ui-action-filter='[Action4_63A779E7726F43F6AFFFFF3724DEC0D5]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0llw4420xxwu2615peoss0kqvk84].[Action (Country)]'>
            <groupfilter function='level-members' level='[country]' user:ui-action-filter='[Action2_8E424F1A8E764A5992453285A260CB3A]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0llw4420xxwu2615peoss0kqvk84].[Action (YEAR(Date Published))]'>
            <groupfilter function='level-members' level='[yr:datePublished:ok]' user:ui-action-filter='[Action6_3815662046A348B5A5FC037432D433C3]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.0llw4420xxwu2615peoss0kqvk84].[cnt:recommended:qk]' included-values='in-range'>
            <min>1</min>
            <max>5816</max>
          </filter>
          <filter class='categorical' column='[federated.0llw4420xxwu2615peoss0kqvk84].[none:airline:nk]' filter-group='6'>
            <groupfilter function='level-members' level='[none:airline:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <_.fcp.SingleValuePerNestSorting.true...single-value-per-nest-shelf-sorts>
            <single-value-per-nest-shelf-sort dimension-to-sort='[federated.0llw4420xxwu2615peoss0kqvk84].[none:recommended:nk]' direction='DESC' measure-to-sort-by='[federated.0llw4420xxwu2615peoss0kqvk84].[none:recommended:nk]' shelf='rows' />
          </_.fcp.SingleValuePerNestSorting.true...single-value-per-nest-shelf-sorts>
          <slices>
            <column>[federated.0llw4420xxwu2615peoss0kqvk84].[none:airline:nk]</column>
            <column>[federated.0llw4420xxwu2615peoss0kqvk84].[cnt:recommended:qk]</column>
            <column>[federated.0llw4420xxwu2615peoss0kqvk84].[:Measure Names]</column>
            <column>[federated.0llw4420xxwu2615peoss0kqvk84].[Action (Airline,Recommended)]</column>
            <column>[federated.0llw4420xxwu2615peoss0kqvk84].[Action (Country)]</column>
            <column>[federated.0llw4420xxwu2615peoss0kqvk84].[Action (Airline)]</column>
            <column>[federated.0llw4420xxwu2615peoss0kqvk84].[Action (YEAR(Date Published))]</column>
            <column>[federated.0llw4420xxwu2615peoss0kqvk84].[Action (Cabin Flown)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='color' value='#000000' />
            <format attr='width' field='[federated.0llw4420xxwu2615peoss0kqvk84].[:Measure Names]' value='175' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height' field='[federated.0llw4420xxwu2615peoss0kqvk84].[:Measure Names]' value='17' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[federated.0llw4420xxwu2615peoss0kqvk84].[avg:Calculation_498492210555817988:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0llw4420xxwu2615peoss0kqvk84].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0llw4420xxwu2615peoss0kqvk84].[none:recommended:nk] / [federated.0llw4420xxwu2615peoss0kqvk84].[none:airline:nk])</rows>
        <cols>[federated.0llw4420xxwu2615peoss0kqvk84].[:Measure Names]</cols>
      </table>
      <simple-id uuid='{7FA7C2CE-AD62-4469-8EE5-1A0873C460CD}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Dashboard'>
      <style>
        <style-rule element='table'>
          <format attr='background-color' value='#dfe7e8' />
        </style-rule>
        <style-rule element='dash-title'>
          <format attr='font-family' value='Microsoft YaHei' />
          <format attr='background-color' value='#00000000' />
          <format attr='border-color' value='#000000' />
          <format attr='border-width' value='0' />
          <format attr='border-style' value='none' />
        </style-rule>
        <style-rule element='dash-subtitle'>
          <format attr='font-family' value='Microsoft YaHei' />
          <format attr='background-color' value='#ddebf0' />
        </style-rule>
        <style-rule element='dash-text'>
          <format attr='text-align' value='auto' />
          <format attr='font-family' value='Microsoft YaHei' />
          <format attr='font-weight' value='normal' />
        </style-rule>
      </style>
      <size maxheight='900' maxwidth='1600' minheight='900' minwidth='1600' preset-index='8' sizing-mode='fixed' />
      <datasources>
        <datasource caption='ParÃ¡metros' name='Parameters' />
        <datasource caption='reviews (airlines)' name='federated.0llw4420xxwu2615peoss0kqvk84' />
      </datasources>
      <datasource-dependencies datasource='Parameters'>
        <column caption='Choose The Service' datatype='string' name='[ParÃ¡metro 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Total Avg Rating&quot;'>
          <calculation class='tableau' formula='&quot;Total Avg Rating&quot;' />
          <members>
            <member value='&quot;Seat Comfort&quot;' />
            <member value='&quot;Cabin Staff Service&quot;' />
            <member value='&quot;Food and Beverages&quot;' />
            <member value='&quot;Ground Service&quot;' />
            <member value='&quot;Value For Money&quot;' />
            <member value='&quot;Total Avg Rating&quot;' />
          </members>
        </column>
      </datasource-dependencies>
      <datasource-dependencies datasource='federated.0llw4420xxwu2615peoss0kqvk84'>
        <column caption='Choosen Service' datatype='integer' default-format='n#,##0.0;-#,##0.0' name='[Calculation_498492210555817988]' role='measure' type='quantitative'>
          <calculation class='tableau' formula='CASE [Parameters].[ParÃ¡metro 1]&#13;&#10;WHEN &quot;Seat Comfort&quot; THEN [seat_comfort]&#13;&#10;WHEN &quot;Cabin Staff Service&quot; THEN [cabin_staff_service]&#13;&#10;WHEN &quot;Food and Beverages&quot; THEN [food_and_beverages]&#13;&#10;WHEN &quot;Ground Service&quot; THEN [ground_service]&#13;&#10;WHEN &quot;Value For Money&quot; THEN [value_for_money]&#13;&#10;WHEN &quot;Total Avg Rating&quot; THEN [ratingValue]&#13;&#10;END' />
        </column>
        <column caption='Airline' datatype='string' name='[airline]' role='dimension' type='nominal' />
        <column-instance column='[Calculation_498492210555817988]' derivation='Avg' name='[avg:Calculation_498492210555817988:qk]' pivot='key' type='quantitative' />
        <column-instance column='[airline]' derivation='None' name='[none:airline:nk]' pivot='key' type='nominal' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='156' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98222' id='159' param='vert' type-v2='layout-flow' w='99000' x='500' y='889'>
            <zone h='98222' id='157' type-v2='layout-basic' w='99000' x='500' y='889' />
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
        <zone h='36000' id='37' name='Map' w='45313' x='12250' y='13222' />
        <zone h='6778' id='38' name='Map' param='[federated.0llw4420xxwu2615peoss0kqvk84].[avg:Calculation_498492210555817988:qk]' show-domain='false' show-null-ctrls='false' type-v2='filter' w='6688' x='50563' y='31889' />
        <zone h='1178556' id='39' name='Map' param='[federated.0llw4420xxwu2615peoss0kqvk84].[none:airline:nk]' type-v2='filter' w='10000' x='1375' y='10778' />
        <zone h='7000' id='40' name='Map' pane-specification-id='0' param='[federated.0llw4420xxwu2615peoss0kqvk84].[avg:Calculation_498492210555817988:qk]' type-v2='color' w='6938' x='50563' y='39222' />
        <zone custom-title='true' h='6667' id='41' mode='compact' param='[Parameters].[ParÃ¡metro 1]' type-v2='paramctrl' w='10000' x='1500' y='3333'>
          <formatted-text>
            <run bold='true' fontalignment='1' fontsize='11'>Choose The Service</run>
          </formatted-text>
        </zone>
        <zone h='25667' id='44' name='Bar Chart_Cabin' w='31563' x='12188' y='50000' />
        <zone h='24000' id='45' name='Bar Char_Traveler' w='31500' x='12250' y='75667' />
        <zone h='25889' id='46' name='Bar_Airline' w='53250' x='44438' y='49889' />
        <zone h='29222' id='47' name='Pie Chart' w='39313' x='57688' y='-111' />
        <zone h='23778' id='50' name='Date_Rating' w='53250' x='44438' y='75889' />
        <zone h='13333' id='73' name='Summary Table' w='45313' x='12313' y='-111' />
        <zone h='20444' id='148' name='Sentiment Analysis' w='34688' x='57625' y='28778' />
        <zone h='8667' id='149' name='Sentiment Analysis' pane-specification-id='0' param='[federated.19jdxec19u98vg14kcmkj1kk54gz].[none:sentimentConclusion:nk]' type-v2='color' w='9000' x='92375' y='40333' />
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='2150' minheight='2150' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='165' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98222' id='164' param='vert' type-v2='layout-flow' w='99000' x='500' y='889'>
                <zone fixed-size='120' h='13333' id='73' is-fixed='true' name='Summary Table' w='45313' x='12313' y='-111'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='263' h='29222' id='47' is-fixed='true' name='Pie Chart' w='39313' x='57688' y='-111'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone custom-title='true' h='6667' id='41' mode='compact' param='[Parameters].[ParÃ¡metro 1]' type-v2='paramctrl' w='10000' x='1500' y='3333'>
                  <formatted-text>
                    <run bold='true' fontalignment='1' fontsize='11'>Choose The Service</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='6778' id='38' name='Map' param='[federated.0llw4420xxwu2615peoss0kqvk84].[avg:Calculation_498492210555817988:qk]' show-domain='false' show-null-ctrls='false' type-v2='filter' w='6688' x='50563' y='31889'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='1178556' id='39' mode='checkdropdown' name='Map' param='[federated.0llw4420xxwu2615peoss0kqvk84].[none:airline:nk]' type-v2='filter' w='10000' x='1375' y='10778'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='36000' id='37' is-fixed='true' name='Map' w='45313' x='12250' y='13222'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='7000' id='40' name='Map' pane-specification-id='0' param='[federated.0llw4420xxwu2615peoss0kqvk84].[avg:Calculation_498492210555817988:qk]' type-v2='color' w='6938' x='50563' y='39222'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='184' h='20444' id='148' is-fixed='true' name='Sentiment Analysis' w='34688' x='57625' y='28778'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='8667' id='149' name='Sentiment Analysis' pane-specification-id='0' param='[federated.19jdxec19u98vg14kcmkj1kk54gz].[none:sentimentConclusion:nk]' type-v2='color' w='9000' x='92375' y='40333'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='233' h='25889' id='46' is-fixed='true' name='Bar_Airline' w='53250' x='44438' y='49889'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='231' h='25667' id='44' is-fixed='true' name='Bar Chart_Cabin' w='31563' x='12188' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='216' h='24000' id='45' is-fixed='true' name='Bar Char_Traveler' w='31500' x='12250' y='75667'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='214' h='23778' id='50' is-fixed='true' name='Date_Rating' w='53250' x='44438' y='75889'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{D32E0F09-ADD7-4CFD-A7F7-87C484A93944}' />
    </dashboard>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Dashboard 2'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones />
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='700' minheight='700' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='14' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98000' id='13' param='vert' type-v2='layout-flow' w='98400' x='800' y='1000' />
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{88A9AD13-C7D4-4903-AC9F-4D8E2733D7B1}' />
    </dashboard>
  </dashboards>
  <windows show-side-pane='false' source-height='51'>
    <window class='worksheet' name='Map'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='141'>
            <card param='[federated.0llw4420xxwu2615peoss0kqvk84].[avg:Calculation_498492210555817988:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card param='[federated.0llw4420xxwu2615peoss0kqvk84].[none:airline:nk]' type='filter' />
            <card mode='compact' param='[Parameters].[ParÃ¡metro 1]' type='parameter' />
            <card pane-specification-id='0' param='[federated.0llw4420xxwu2615peoss0kqvk84].[avg:Calculation_498492210555817988:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0llw4420xxwu2615peoss0kqvk84].[none:airline:nk]</field>
            <field>[federated.0llw4420xxwu2615peoss0kqvk84].[none:cabin_flown:nk]</field>
            <field>[federated.0llw4420xxwu2615peoss0kqvk84].[none:country:nk]</field>
            <field>[federated.0llw4420xxwu2615peoss0kqvk84].[none:scale:nk]</field>
            <field>[federated.0llw4420xxwu2615peoss0kqvk84].[none:type_of_traveller:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='1' />
      </viewpoint>
      <simple-id uuid='{2B9326ED-1470-4552-9926-7B9FF1BD6429}' />
    </window>
    <window class='worksheet' name='Summary Table'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0llw4420xxwu2615peoss0kqvk84].[none:airline:nk]</field>
            <field>[federated.0llw4420xxwu2615peoss0kqvk84].[none:recommended:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{7F406E3C-5706-43CB-A557-F51000D539DD}' />
    </window>
    <window class='worksheet' name='Bar Chart_Cabin'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='175'>
            <card param='[federated.0llw4420xxwu2615peoss0kqvk84].[none:airline:nk]' type='filter' />
            <card mode='compact' param='[Parameters].[ParÃ¡metro 1]' type='parameter' />
            <card pane-specification-id='2' param='[federated.0llw4420xxwu2615peoss0kqvk84].[avg:Calculation_498492210555817988:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0llw4420xxwu2615peoss0kqvk84].[avg:Calculation_498492210555817988:qk]</field>
            <field>[federated.0llw4420xxwu2615peoss0kqvk84].[none:airline:nk]</field>
            <field>[federated.0llw4420xxwu2615peoss0kqvk84].[none:cabin_flown:nk]</field>
            <field>[federated.0llw4420xxwu2615peoss0kqvk84].[none:type_of_traveller:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{237378DB-4119-48B5-8097-85548F1FFCAB}' />
    </window>
    <window class='worksheet' name='Bar Char_Traveler'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='175'>
            <card param='[federated.0llw4420xxwu2615peoss0kqvk84].[none:airline:nk]' type='filter' />
            <card mode='compact' param='[Parameters].[ParÃ¡metro 1]' type='parameter' />
            <card pane-specification-id='4' param='[federated.0llw4420xxwu2615peoss0kqvk84].[avg:Calculation_498492210555817988:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0llw4420xxwu2615peoss0kqvk84].[avg:Calculation_498492210555817988:qk]</field>
            <field>[federated.0llw4420xxwu2615peoss0kqvk84].[none:airline:nk]</field>
            <field>[federated.0llw4420xxwu2615peoss0kqvk84].[none:type_of_traveller:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{8E23C815-CCD3-4659-A1EE-3C2CFD704DA3}' />
    </window>
    <window class='worksheet' name='Bar_Airline'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='175'>
            <card param='[federated.0llw4420xxwu2615peoss0kqvk84].[none:airline:nk]' type='filter' />
            <card mode='compact' param='[Parameters].[ParÃ¡metro 1]' type='parameter' />
            <card pane-specification-id='2' param='[federated.0llw4420xxwu2615peoss0kqvk84].[avg:Calculation_498492210555817988:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0llw4420xxwu2615peoss0kqvk84].[none:airline:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{BB885F35-E2F3-47FF-8F50-992E717EF8E7}' />
    </window>
    <window class='worksheet' name='Pie Chart'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='175'>
            <card param='[federated.0llw4420xxwu2615peoss0kqvk84].[none:airline:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.0llw4420xxwu2615peoss0kqvk84].[none:recommended:nk]' type='color' />
            <card pane-specification-id='0' param='[federated.0llw4420xxwu2615peoss0kqvk84].[pcto:cnt:recommended:qk:2]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0llw4420xxwu2615peoss0kqvk84].[none:Calculation_498492210548977667:nk]</field>
            <field>[federated.0llw4420xxwu2615peoss0kqvk84].[none:airline:nk]</field>
            <field>[federated.0llw4420xxwu2615peoss0kqvk84].[none:recommended:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{B98F71BF-A957-4C08-A975-9379446FD5ED}' />
    </window>
    <window class='worksheet' name='Bar_Recommended'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='175'>
            <card pane-specification-id='1' param='[federated.0llw4420xxwu2615peoss0kqvk84].[none:recommended:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[Parameters].[ParÃ¡metro 2]</field>
            <field>[federated.0llw4420xxwu2615peoss0kqvk84].[none:Calculation_498492210548977667:nk]</field>
            <field>[federated.0llw4420xxwu2615peoss0kqvk84].[none:airline:nk]</field>
            <field>[federated.0llw4420xxwu2615peoss0kqvk84].[none:recommended:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{C32B71EC-63D3-4AF4-AD0C-C57C7F295714}' />
    </window>
    <window class='worksheet' name='Date_Rating'>
      <cards>
        <edge name='left'>
          <strip size='175'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='compact' param='[Parameters].[ParÃ¡metro 1]' type='parameter' />
            <card pane-specification-id='3' param='[federated.0llw4420xxwu2615peoss0kqvk84].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0llw4420xxwu2615peoss0kqvk84].[:Measure Names]</field>
            <field>[federated.0llw4420xxwu2615peoss0kqvk84].[none:Calculation_498492210537193474:nk]</field>
            <field>[federated.0llw4420xxwu2615peoss0kqvk84].[none:airline:nk]</field>
            <field>[federated.0llw4420xxwu2615peoss0kqvk84].[none:date_flown:nk]</field>
            <field>[federated.0llw4420xxwu2615peoss0kqvk84].[yr:datePublished:ok]</field>
            <field>[federated.19jdxec19u98vg14kcmkj1kk54gz].[attr:Sentiment Conclusion (copia) (copia)_756041817730195476:nk]</field>
            <field>[federated.19jdxec19u98vg14kcmkj1kk54gz].[attr:Sentiment Conclusion (copia)_756041817730166803:nk]</field>
            <field>[federated.19jdxec19u98vg14kcmkj1kk54gz].[none:sentimentConclusion:nk]</field>
            <field>[federated.19jdxec19u98vg14kcmkj1kk54gz].[usr:Sentiment Conclusion (copia)_756041817730166803:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{D3AECE62-071F-4663-AD40-D2B22E8DA393}' />
    </window>
    <window class='worksheet' name='Sentiment Analysis'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='164'>
            <card pane-specification-id='0' param='[federated.19jdxec19u98vg14kcmkj1kk54gz].[none:sentimentConclusion:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.19jdxec19u98vg14kcmkj1kk54gz].[none:sentimentConclusion:nk]</field>
            <field>[federated.19jdxec19u98vg14kcmkj1kk54gz].[yr:datePublished:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{AA88E0E4-3323-41BB-847F-24521753A1B7}' />
    </window>
    <window class='dashboard' maximized='true' name='Dashboard'>
      <viewpoints>
        <viewpoint name='Bar Char_Traveler'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Bar Chart_Cabin'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Bar_Airline'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Date_Rating' />
        <viewpoint name='Map'>
          <zoom type='entire-view' />
          <default-map-tool-selection tool='1' />
        </viewpoint>
        <viewpoint name='Pie Chart' />
        <viewpoint name='Sentiment Analysis'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.19jdxec19u98vg14kcmkj1kk54gz].[none:sentimentConclusion:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='Summary Table' />
      </viewpoints>
      <active id='37' />
      <simple-id uuid='{C5FCCAF4-5E11-4CD4-B017-B15E181FE99E}' />
    </window>
    <window class='dashboard' name='Dashboard 2'>
      <viewpoints />
      <active id='-1' />
      <simple-id uuid='{61796825-26B3-43C7-9F61-0FF01EA060DF}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Bar Char_Traveler' width='192'>
      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
      0GxXFZey9QAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Bar Chart_Cabin' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Bar_Airline' width='192'>
      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
      IpNKJikpKi53reibzEo8gdfjZHo2QnenNpSqlArEkhlQVew1okB3Z7BX7SogilUTZGtlSj27
      r7EyfYvxSBaT1cnenTswio9JFIhylo+uTmLMRbgzv1JTRJBSnDl7gYk7U2SLNb40goAgS0yM
      XOOnZ6/X1GGwmBk59x7Ds1mCPm3sXVZUQgHfasRCqjEYK+dZWY4wNDTE0NAQkUSuslwps7gw
      y/T09Op/80s1v5pk5zk3vICSWebSrZmade3cuZcWv5dAMFBzPgKDEbWY4ebls5wbmtSWA7eH
      L3Nndonhyx8xNB2tGkirRKMRJsduMTQ0xPhMpKaOldnbfO+117l25gOmEjVsIojIqQg/ff8M
      Nre2ywiglIpEo1Gmbpzh5mJWUx6LxVicvr1q17EprYJygWj0vt0XY5ma1xmdXOLA4QMI+QiZ
      Qv0oUFGS7tniEegCAWoZxehkYHCwZoAHwBXu4qgzjyCKmgkOAJQSVy6cx9u9n+Nt2kmhyMwY
      s8spZIMJsZgmni4Scld+eZ0OO+NToywl86hWv6YplgUTHq/v3iDMYNQOpBVZvpeUhlinvXe2
      0CBe4fqEyI6ugZoiV69co3lgH3O3rmJ3eQm5qlo+KcNHpy+x69hJmoO1Xzy/y8WdjIjBZKWn
      u3JiSFVVXG4fLvfqvQh1dnsul8sEvB4sdihUhzClDFdv3kYuS5iNJpaXV2jya5PwlPKqA8hF
      GVt1h0NVcDmdOJ1OAk2sRnuq/1404XL76HfXtztAa9jNlYuXKRVVxienOLSr516Z2WJnZvQ6
      y5IVj8uBP7Aa5Hjog2AAVEgnIszNL5CSBII1ZoKj8xN870dvEZmdwt6yA5+tyncFA+GmZvKR
      cc7eijDY3VpR7PD4cZrKWPxd9AZguezA79Aa0hdqoq2tlcmxW3R2dFSUZWIRpqanWFqJk04l
      ES1OHOtnNWWJO1NTZPIywVCIUDCA1Vy1TXi5wHI0RjpfAAQsdjeeGv1ZJRtjLp4jn5do72jH
      bKgO25ppbW1i/tYlbkcVulu0USuHJ4DdqOINtxJwOyq6SaqUZWx8koWlCOl0ilxJwOfWvrwA
      bb07aQ54sNqdlTPSBjONDSFS6SL7D+4jsbJIKKith2A043Z7aOroodlf1T2VJe5M3WF2bp50
      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
    </thumbnail>
    <thumbnail height='192' name='Bar_Recommended' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Dashboard' width='192'>
      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
      xNDrXy5HC+RI+7IvAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Date_Rating' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Map' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Pie Chart' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sentiment Analysis' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nOy9d3Rd13ng+zvn9n5xgYveQRSCBWDvpChKlmTJRXJTMimTyctLe3lv3iST
      N+MycZJ5mckrkzeeJOPYSRyXTCzHkq1iFatRotgrCJDovV5c3N5P2+8PqpiWSEIUKJLi/a3F
      tbhwNs7Z+2B/Z+/v21+RhBCCIkXuUOSb3YEiRW4mRQEockdTFIAidzRFAShyR1MUgNsChaHe
      XgZGptCMZdgshMHM2CB9F/rJKPrbP86n46SyyqX/J5dIFYzLf01oLC1Fr3RT4kthVOMKl29T
      igJwW7DET587Q2z8BE++duGyK88++xTGzxvyDJ2fvvgKmrLIj35y+O0fz148wfmxCAAzZ39K
      33SKCxeHeUtEhJHmhecPXrEXx3/6HFFlJcZz62C+2R0osjx8wWq237ODv/3mj+g1j/Pc66dp
      3fZxzh56DdlbhT55jt7JRbY/9KvctaYCSTZht9tBDfH0T15jd7efUyfHiVoXOXcoz9YWB2hZ
      zlwcITpyjPNhuP/B/SxODfCNv/hzNt7/KY48/SRJ3c3nH97Ga4cvkAwt0X2zX8QKU1wBbiMS
      04OY/OUMjy2xrrORtGJjVcdq7t7cyuhskp133U1dqR0ATckRzzn49IN7UBWVTCqFJmTWbb+L
      Rr8glddBCIQwqG5dTYVNZTYcp7y+gwObG5idmkZxVHPPXZsJzyywbu/9tNeU3OQ3sPIUV4Db
      Ag8ec5hDF6187pP7me49wkzKYENdBe6GdRw8O8mnHtrL6YE56po7QZLZtucAnevXYhYajaUG
      g4uC9Ts3MzVyAl/7XjoCCjm3B2dnG7KIgaOUpqpK/MJEiV+n215Pqfw6S8kCu7dt48jrb2Cr
      bcf1EZsxUvEkuMidzE3fAhnGR8ysUOS24qYLgK7r125UpMgN4qYLQJEiN5OVU2mEQf+5Y4QS
      BcobViPHx5lZSlHfsY7oaD+KM8iaaiear54Kj+XtX5tbHOF4YgnZ5KLb72QkEeJCXOf3t94N
      GPyPU49T6qtnTVUHZydOkjNkuqqb6JsbpL5qM3J+ibU17dhkacWGUuTOYUV1+ryi4/OXsjDd
      T1lpHXff1c35gX5kqxOTniOSMWHk5ylz14OhI4RA1QVum4tMXqU20IJVz2FxBlFVFciQUix0
      equxKiHs7ha2O+K8uLiIz2xhITZLmd3CQjpJtcO5kkMpcoewcgIgSazt3kw6kyY3mMLQNHRd
      RzK56NrQxsLcAuFEAr8jz0K8mmq/CSEEi5pMU1kdA7ODCHT6Ygm2t67DZJIBF5/t2s9U6Cw9
      cgAhzGiGTk1ZK91uwcDiNDFVJbIwSN2qzSs2lCJ3Diu6AoRnxxgcD9G6cTsiPMyho6do79qK
      1QrC4qGuVGNwKkp3iwlJkpAkiQa3nTOhEVzOMgwtjdtbR4nVzHxsGrvNRc/8CCnVzNaGFkbm
      znEyaeHuVQGSsVEaKzsw5s5TcJQhy0V1psj756afA6iqisVySSf42a5IUnFPX+TGc0t9Nl8Y
      OcG/+tGf8fzI8ZvdlSJ3CLeUAAwuTZJWcjzVf4iJ2PzN7k6RO4BbagsUySY4Pn2RvsUxBsKT
      PNy5l/tat2E1Wa5xlyJFro9bSgDeQjd0Xh47zQ/6XmZVoJZf7n6Aak9pUS8osuLckgIAlxTi
      udQS3zj5JPPpCP+i6z5216/HVLT2FFlBblkBeAtFV3l26ChP9h+iu6qVA82bqfaUEXB6P8Re
      FvmocssLAFxaDYYi03z9xI+YSYbpKKvnS3f9S+xm64fUyyIfVW6L/YQkSbSV1vGL6z+Gw2xj
      Ir7A0NI0xVCGIh+U22IFeAtDGMwkwjwzeJhz88P8u72/THOg+gb3sMhHmVtAAApkdQWr2YHd
      bEbT8qiYcJotgCBTyKBhwmO1o+sKGiYkofG1oz9kPL7Av9n1C7QEqpGLFqIi18FN3wKNzY3w
      xtwITw2dRtNVjg2+xOPjY29eLdA/P87rQ68xlExzbvwNXpiZJpmaZU1ZJcge/uS17zERD93U
      MRS5fbnpAuCymUnnEphNNmLJKayuGlymt7plx2eHlGGlzOFgXeUqLLKE2WSmoKnc17aVCqeT
      /3rk+8ynIkWdoMj7ZkUFQM2nmZqaJqvoKLkUMzNzqIYgEQkRTWYRWp6ccnkM8GhKZ8eqbcha
      gjOzwyxkwoyFp8kDGCq1ZavZ6LMyls6+/TsBXwOf6txNjd3CvlV78Jnhzw99j/l0ZCWHU+QO
      YOV0AGHQe/okjpIA0VQem5rF4rShm+wUkjmEyURVwI6nqhmf/R0v7EhsjpNLU/hcVWyrqkdW
      E5xOFKgyK9htbs7Pj1AQMhtqmrkw1UdYk9jWsBGbGsHurmBy4SJJyc3B4UPEC2m+tPdXb/4Z
      gZ7n6PQFFtMRnL4OalhkNKfTVbOeepeD2cgofdEQcxmFT6/q5OBkP8GSBkqNGP0ZwT0NzUyn
      8nQGKylqNjeWFRQAwWT/WUZCccora0Eys3ZVNecHh9HjMdKSnTKvlWROonvjesziUkSYrusr
      4sufUrJ87dgPWczG2FKzmi+suRuL/O5wh4XEJP3xCHlhYV9NC70LQ5gdFWwqqwIEo4uDzCoy
      W6qa6ZvrIW3ItJU1MxUZp6F8NZISp8Rdjn0ZIZgnx96gtKKTE6N93NW8jhKnD9ubY01nZjgU
      zlChz6P719Dq9jAw10vckKhyuvC6qqjz+DAXlfsbygoGxAgiaZWdu3Zw+uRpnHYP2WwKAwcb
      dq5lenyUpWSK+lIT4YRGXeAd0+dyzaBXo9Rq5Re7PsaXX/4Gzw0f456WzdT7K9/Vrj7YSoXH
      z/OT08yGe7GXdNHlc1xyuFPCXEjDVr9GbyLGoiJ4ZPU2FqPDuGx2LoSnqXN5qbPZuNb8N7Q4
      s5qL7V4bJySJUGKCi+kK7q9vBGBoYoq1tTsITc6jGlmeHx3ik+1dTEcXSChZRsJDREUHO4Jl
      H/jdFLkyK6gDSDTVlXPq+Cka2tbRXOvnXN84LauawMhj95bTVlfOTAwq/DcmvVhzoJr73/Qe
      nUmGr9huNDRMQ3kr0UyG2cgAj/WfvJQgVssi27yU2F2klRwlJp1/7nmemKmMgqbgM2nMJCZ4
      ZrT3mn0ZmxugtXYtJpOPdp+d+VyOgMPBwOI4up5kVnPR5LDRWd1OJL6A3ebGa/dQEDIdgSBZ
      NY97BT4MRa7OLXAOsPyDsOUghOAfz/+UU7MD/OmB38BjuzxYXhhZftB7kkfW7yO82EdvTiae
      jnJv8xosZhMvD53FY5GoDLaj5VMkUhO4K3bSLEeYLpiYj0+SNSx8ur0Yg/xR4JYSgKH5PsbT
      GeyOIN1+J6cX59lYtx6/xYRhqJyaOkdcgy0Nm0nFRxjPaWwsr+F8aJru2k5i6TA1vnIySpZ/
      +/xfcXfzJj67Zv9lbtTCUEmqOj6bHSEMIpkoJosbOzqY7QgtQ0qTCDqdxDJxFMxUuLwoWgGz
      2UYoMccP+o+zraaV7XVrkN5UUy97xpuvtOi+fetzSwkAQCY1wcuhLHJhkd2runl5bJjPrN5C
      Pr/ES9OzPNTaRTI5zkuhDA81t9I/fQHJZiWiWChzlrAuWA7AoYke/u7MM/zpgd+gzld+3f0T
      CDKFHAvpKH2LYxyZ6mU8No8syVS6AwRdfkodXkqdPspcfgIOL+cXRpAkiUfX3YPF9BHLJvsR
      4xb76xj0zE+xrmYLRgqOTY0QzsUBkGQJPR/liQuHaPG5SeeSPDsYZ11FAyPRWZwWJ9PRYdJa
      gR1VdWyt7eTg+Bke632J39/1C8v+GsdyKc7ND1HtDTKTWKQvNMZIdIZoLkmNN0hroBavzUW9
      r4JKdylL2TiRXJL+pUli031Ec0lyagGAPQ3dNJa8WxEvcutwSwlAIR9jQXew1WknI1VjMy+Q
      xUVWySILM13165hdOEvBVEPQZSUoJciZS9gU1AnnVTLCTCIbAeqwmS08uv5e/uy1b3NqdoDN
      tR1vb1euhEDw7bPPcniqF6vJQondTVtZPZ9du581wSZ8djdm2YQhBPKbaV3g0pbHEAJDGCi6
      yj/2/JRj030cnDjDL/vuLwbx3MLcUgIgyVZ2N67FLIGhF1jS7Hy8pYF4ahGf00chH6Y02EV7
      IEgoPkNML6PN6yaZ02nze/FEp7A6W96+36pADXsauvhB3yusLm/EbXVc8dlCCHpDo5ybHwag
      tbSeX9t4P5FMAiFbsFndWEwm0tkoI4kYTWWNiEKEqaxCe1ktS/FpZHuQoFnn810Psa1uDf/l
      8Pdp9Fexr7G7qA/cotxyOsBKE8ul+Pcvfp37V23j051737ONEILjMxf55qmn2NPQxYPtOzg4
      dIS9nQcwaXkODh/lrjX3UWYWjC1NYzbrnJlfwJDMrA94mCtopLIqZrOZSruFlqoOXLLEUwNv
      8OTAIb6071dpCdTcsDEWuX4+8muz3+7ms2vu4smBQyymY++6bgiD1ybO8tfHn+CB1u38yob7
      cZPG5G6iwmbHQwLhbKTMIoNkos4fZHJplqaKNsotBsOxMNPZPC4phxAKCSXPsal+cgZ8vG0H
      m6rb+ctjPySWS92E0Re5Fh95AZAkiT0NXdR6gzzW9zKGeMcZzxAGzw0d4+9OP8Mvdt3Lw517
      kSWJc3PjdFc3AYIjk0Psamy79AtC443Rk1RWbqCrtJTNDZtYHygl6Cxnb+s2Kpw+UppChaVA
      uKBgMZn5le4HsJgs/P2ZZ1B09ea8hCJXxPTVr371q9dqZBg6um4gYMUDTwzDwGQyreg9fx6z
      bKLOV87/OP8izSXVVLoDaIbOD/te5cmBQ/xPmz/B3c2bkGUZIXQUrDR4S5DRUGQXjW4vhXyU
      iUwBycgzmwiRNMwUMvNMK1Z21TYj9CxWawmtHgezipXVJQFkScJmttBZ3sgPLxwkrxVYW968
      IvqAEAZD8xc4szhHwOXm7HQPU9kC1Z6SS24awuD81AnCeMkmJzi5MIlNljg104/TVc5iYgGv
      w3PHBxItQwfI8tg3v4vu8lC3eit7Nqxa0Q7caB3gLYQQfP3kj5mIzfOV/b/GP/e9wqGJHn57
      68Nsrum4oUrqWzrGfz/xBL+77TNsre38wPdUCiGeHJ3j4fZ1LEQGGNYCBPKj2Mq30eG2kkrP
      cmTiPMLfSSYxy4GmVVwYeQNvcBVTWTNNviCrS4Pc4fN/OVsgCbOnjN27d7O68fa1aUuSxCOd
      +4hkE/ybZ7/G0ak+fn/3ozd88r/17K21nXyiYzd/e+ppJmLzHzh4R88nWMhG+XHfiyRtNTiV
      OQbiETKqghAGp2aGqfYFyBsmtlSUc3xmmMpADfGcSsCsMhIe4PmJ/hUa4e3LMgRAprEmQM/5
      XhaiyRvfoxuIy+rAYbETy6f4eNsOOsubPjTzpCxJfHr1XlrL6vir40+QVnIf6H4WVxWNTitB
      u52cpuOyeTCbvdQ5JOYzaar9FcSzceK5JEK24DKBZmug3e+jxB3EbLKh64UVGt3tyzK2QApP
      fOc7aGYTnuZdPLC97b2bCYGmqRgCJNmEWQZVM7BYzBi6hpBMmGQQSJftOz+sLdClLgqOTvcx
      tDTNp1bvocThWbmbGxpnZ3uZT0dIylV02DNMZHKsqupibYmfZGaB47MTTKWTnJ4fQNcKtFZ0
      0OYyMZEzeLhzO3OxGJtrLp1j5LUCDosNWbrCN0oIckqGtC4I2B3EcyksFhduk0RGN/BYbRi6
      Ql6YQM+S0QUBhwdVU7BarGTzKTA57niP02UIQJJ/+tZzbN5az7lxE597aOt7NxMGIxfPsRhP
      ElecNHo1FlN5KhpWEZ8aQ7MHaK9yIAUaCbrfeekfpgB8GPSMvoapbC2jc+M80NzC81OTfKK1
      G0loTMVmOBeaxYZKT3yJUHSalFYgns8iCYHH7qHS7ccsm+gPT/CxVds40LwJv92N1+66sjAU
      uW6WcRLs5e4DGxifS3DgrvVXbibJrFqzEe/4RTRvFUuhKHvXV3N+YABZktDVHLGsRDYxQWBt
      K0LXgEtWIEVRVmg4MBweYCGv4HVVsMbrZTAZY81buYOExkB4FMNaSqe/lNn4DDZnJX4pR080
      yvryRqLZGBWukut7uJHhYlrm4VqZIV1HVS+ViVIVBdDRNTAZGpKAh9c/yPT0CeqC7eQyISbi
      s8wUzMRzMWKZMIYQvDhykpdHT+G1OSlxeKnxBmnwV1Dm9NMfnqCttI6t1atX7N3diVxDAAr0
      nOph9MIFlgoqKdzcu/3KL1zoeebTsK7eTmi6gKoqSCYXW3atY256koVoggqfYC6mUlty6dFC
      CMzmlfPI6KhaQ3ViiENxnWpbit7FMborGgBYjI6xJLxIS71MWrcQTU6jSWVY4iNY3W76I+PY
      rEFqr3NFmg/Psap6NTarnxaPxItTF2mt6mIsNoPfJjMYX0Az2dha08Br48dxOMpoLAkyVEiw
      v3UrL4z0sr1pP+1eDxfDE3SUNaDoKlOJEJPxBaYTi7w+0cNSNk5ayXFosgeLycyGqrai1+l1
      sowtkM7kxDTJuTGoXse6xuAVW+YSS8Q1K1WlHubH+xmairC6ewtBt2BmIYODOAOTUTZs2YLL
      ckkPWPktkMGLF16lq+0uyi0mnrj4Go907gMgk5nnubF+VCHx4Jq7yEZ6GJWb6DDFOBYO4bU5
      SOVS1ATb6Cq98jhvJoYQTMTm+H7vpUO9oaVpmgPVPNC6nU3VHZjfx5lKMhNmKB6no6IZl6TR
      t7TA6ooGzICipOgLz1JX1oTTSNMfjbK6soVMeo4UbppcVqKaiTK77cYN9kajZ5azBUpw5MUj
      GD4F+4L1qgLg8JXxlrtZVVMnVU3vXKurcQBl7L7BLjHZzDxpSzlBs0xOyZLXFNKqgglBNL1E
      INCCPTvGXCaDRSmQlfP4KhvYaBik1RxpI8BiagluUQGQJYnmQA3/x55/AUiE0hGeGjjM35x6
      knLX63yyYzcbq9uxvVlU5IpWLpHl+eFe9rVuRAYmwsO8Mj5B85sCcGb8DP6KVbw4eIISi2Bd
      TQsvD5/AbrKhGzNo/gAlvsYPadQ3iEJ2OSfBdiQjQeOqdZTVVFLmd69oH1b6JFjRdar8lbgs
      MjORKSwWB1ldQlUzVJc2oOXC2Nz11Np1JrMKFjRKnH5ApjpQi6wkaQo24TTf2NPpD4osyciS
      hMfmYlN1O9tr1xDPp/hx/yGOTvcxHptnNDZLR7DhvZXn3DwvLSySzydw2p2MxBJ4zdBU3oAV
      yBUinF+cweWqotEhMZRIMpNN0OqykxISuq4yGVsg4K3CYbpNT9NMluVsgXK88uQLhBOLmOq2
      89n9V1GEr4OPmhXoZiKEYDET4+mBw7zwZqHBf7XxIe5p2YxZNl2+GugJfjgwyM6gjVMJHU3N
      Mrk0yb1dD9Hp9fDyxVdZ17KVV4bO8vDqreiFRZ6ZjvGFjvX0zV4koeUImCVSzg62BVw3acQf
      nGUIgMrk8Di5whLnhuHRh3euaAeKArDyKLrKN089RTSXYjK+gN/u5jOdd7Gppv2yemvh+BT9
      yRxba1uxyzIzsXlK3T5m0mlq7CZOLUzSVN6ORQnTn8iwrb4TB3nmszqlFp2z4UU21bRiuU0X
      ALiGAOhqnqXwIsP9Q2R1g7r2blY3XH987XtRFIAby0I6ygvDx3ll7DTbajv57Jr9lLuv08z7
      fhGCqcgYC4pMd0UN/fODmBwVdAbKkSXIFxKMpXN0llaylJhmKJVnQ1Uzk4tD+PxN+KQcqsmL
      z3LjtqNX1QGUbIQTR8+QUlR0XcPqClBT7l/RDnwY3qC3G/lCgiOT50kYZqLxcc4sjDGWztPi
      L0XXC5ydPs9APIbHrHN48gJ94SkcJjNn5kfxu8uYjy/gd3qQALfVQVflKnbVr+fIdB/f73uZ
      VCFLVs2jGzo+u/uGuYNEE6Mcjypsq6whX0hjsgUYnjtHwF+P0wQz8SXOLAyztryS54Yu0u6R
      Ob00QyxvsJhNki9kqPYHMf18/4RAT8QQio5ktUIhg5HXkawWJARGKomeziPZbYh0Aj2rINnM
      GLE4ksWGUAvw5pbwqgJgtrlpaa9mcU7jngNdjI1EaKhf2RWgKADv5tToUcqqN9HqdlPpq6Lc
      lGYs76DN78MwFGz2MrLRXgz/erZWVjE0PwqGhs9pYTQWxWn3E3S8E/4pSRIuq4NtdZ1UegK8
      NHKSn46c4PTcIJtqOnDbHNeMl74eZsMjjGbSLKSiNJY3k4gNE8NHZ6AckyTjd/oYWZqgo6yJ
      +egoo6kUjcF21Ow8yDIFvcBYIkGdr+wyIdAmz5M5PY5ks2Iu8ZJ98XEykyqOtlokkSd34jzq
      aC+6ZCf3xjH02UG0tEbhYg9azoYemsFcUQnCWI4znJW5sVP85OnniFOcqB8G4VyK0flzPDna
      B8Lg8Mwsu+rqADCZbIQjA0StDbQ4ZBLRIWRfK+sr64lk8jgllaGFPl6dHnvXfa0mCzvr1vHb
      2x7Bb3eTUwv88St/z+MXDpIsZFY8vbzfFaDKV0W5Oc+FmR7OZyzsqm1GEhqqoZNX8yi6Rl6N
      EzFc7K6uZyadYU9zNyXOAJqhYRMZsrp+2X2Vi6NgMTDyGnpoCLxNmOxvzU07ji3rETqYPB4k
      k4KeVjGVeBC5PCIRwsjnKIzPk+/tXY4ZVMZqUomkJVpXNd3yZtCPAkJNoVr8ZAoZGuwGQwU7
      3aXlRDIR8vkFnpteYH2wAqfVxcGxXva1dOO2urAaGaxWF1FFQwjBqpJ3r9aSJFHm9HGgeRMP
      tu/EY3Py8thpnh06imYY1HjKsK1Q8UGn3Y+kxDBsVTR7PeSVNKFcBo8JErpgPjqJxeKgIHvp
      9NmZyBpsq27CMFRKnAGqnTZ0cwm1Ls9lcQv6/DSmjs3o/SdQp+YRhTTKyCKOrWuRRIHUj5/F
      vu8+rI40hTkZV7sDRavDs2s1ejyNUdDQl+ZAN5bnDPf9f/gpm3d34/YHqSzzrcjLeYuiEvxu
      DENlMR3DaffjkHQKWHBbzCRySWxmM4uZFEgQdJdSUAr47E4kSSKr5LBb7SQyUcxWHx7L8twj
      UoUshyZ7eLL/EFaTmftat7GnoQtZkt+VWvJWQBQSZA+fAn81zu4OJCVJbjKOxamD1UrmyBlk
      lwPr2g3o433oORnnrp2I6Cz4K9CGz6FLAdJPPra8iLBvfe1vMJeUUd+5nX2bWld0MEUBuHUo
      aCrPDx/jhZHjhDNxHBYbv7/zUdqDDdhMlvelLEeyCQ5N9LCxuo06X8UtlxYmc/gIsX/4h+Wl
      RRk9f4Qzw4vs3P8xagIr+0UoCsCtx1xqiS+++DdklRxm2UyNt4zVwUY2VrfTVlaH02K/rH2+
      EOdcaJZyXyXJbISx2DxHpnqZjC/QVdHCL6y9i/KSBlLJScZSKWSLl06vnek8rCkJsJQvEHR5
      PrRiIEYmQ+irf4x9w4bl+QKd7Fni4/d18vyhc3z+Uyt7EFbk1qPKXcqf3fOb5HUFm8nC2fkh
      zs4Pc/jYpbTwq4MNVHlKWczEaSut5eTkGWZyOQqqgs0kYzY7WF1aQyyXYjY+T//iIIajhkZv
      NS7rIs9OLqBlDDICnFIG2VrJh+V5JYQg/fIrGJks3k88tBwBcFHiTPH8S8epXPPeiaXeQlfz
      TIyP4ymvx2suMDkXo7GlmVRoEtVWSqXXREa34bYXld5bGUmSqPa+U5ijxhvkwbadxHIpBiNT
      nJkb5Pnh4+Q1hYHQCFarh3pPKe3VXdxTU8uh+Vk+1bqRudQSX33l7xhZmqS9ASxmK9ORWTqr
      V+PMTzGQzrOQTJIshDDXb6TOab9Kr1YGPRIh+exz+D7zMCaP5+oCkIvNc2Emw70PP0o2Msn5
      Gf3KjYVg/OJ5RKAOm8lgoH+EklIfA4MX0PMSkETxOyitbV7hIRX5eYTQeHXwdfImL5trWumZ
      7iWpquxu3Uu5RfD4+WfxuCpYW93ByFw/i/ks6yqbGAiNsqp2K2pmgXXVrZeVZ5IkiYDTyw7n
      WrbVrmFNeROnZgf5XOcOzszPsrOmlpPRLE6LDc3Q0IRBuauET3Ts4vt9r7M/H0O3exhOKzxQ
      58XmX4s+P4COgkl2MZpM3nABEEKQfPoZzIESXLt2AdcIiFFyCeZmY3SvacHQsszO5WDDlSaw
      IBxPoieHUCtrMXmC1NdXER8awazGSQob1rTO7JlzdG/eiJV3aoQVy5uuLGpumvGslZ01lbhN
      dvY0bODw6GHi+Tw+kSORN7O+poFSix1RUkVqYZR4No3bYmEsNEaFw0E4nabUdmVf/501a9lZ
      sxaA/bVWzi6F2V7VxPmZIXyyxMBSGLOeZUNpNYfdfr558kf8ye7PsL5iNbKmogoNlz1ImcPG
      +YVJun3eFY0MfC+0yUkyh97A/5v/M5rZDIpydSVYGCpn3niZ/sklTHY3+z92P5W+K0ipEFzs
      OUNtx1p6z5zEbnHRtqqK4bkMGzqbmRwbIZ5OU+4xo/s73q4RVlSCVx4lPc5jE1FWO9IUPKvJ
      Ri5SVbGONYFSEBoz8UUmFy/irtxJrZxmYGGQsooNuI0ks/EForqEbggeat24Iv3pD0/wn17/
      Lv96x+fZWN2+/HH0HiI7lsHavAqTOkt+NoelpR1nZxNGdJbMqYto01M477uf3LFjmMoqsZZ7
      yI9M4di1F21qGseGNUiA0DSWvvaXiEKB4B/+AdKbZ09XXQEk2cKmvfex8U0RuaopS4LWtlWc
      PXuKpvYNeInTOzRH96YNYOTxBKqpKEtzYTxKd1MxfO9GYnHWUWedZjovaPVE6c8oGNFxCvkY
      zT4//UvTJBWZjSLBmfkpsqpBi9WOnpylvqKdzEwPhnXlivO1lzVwoHkT3zn3HG1l9VfN0v2z
      aPPzWNt3YW8Mkj14DmvbVmyNl+K75UAN7v0eEk+qmKUEOMtwdK1DG+nFXOai0HsRS00VIq8i
      2S3ke3vJ9/ZS8UdfeXvyw7LcoVP0nA3T1VVOz/kFurpvz8xwRW4uiXyaL730DUbv9kEAACAA
      SURBVHbVr+PRdfcs61xAW5hGC4XITyRwb12FuhimMJXC/4n9ACg9b6BamnA2eVHGJykMDmDf
      sR8RnUdPRNGSOpLThXvHRha+/B+wtbRQ8uu/hvQz9Rqu4Quk8PrTj/Pt73yLb3zjO4R+rsp7
      kSLLxWd384vr7+WFkROMx+aW9Tt6aA51bgHZ50NbmEebDyH7AxQGBzDUPIWZJPaWSox0DGV2
      HkNYkD0+MApYWjugkEKyu8i8fgg9HsfzyYcum/ywrBUgz+svvIaw2wnWttHZUnW97+A9Ka4A
      dw6aofMXRx4jo+T48l3/ErN8483hejxO6I/+GNdd+/A9/Ol3XV+GN6jCQihDY2MjwcDKOsIV
      ubMwyyYeXXeA6USIQxPnPrD1TxgGQtPevo8Q4tI/w0DoOur8ApGvfwOh63juv++9+7SMbpNL
      TnPoUJb61dsIblrBdIJF7jjqfBV8avVeHut7mTUVzZRfZxIyoevEv/ePZI8ew7lrJ8gyRiqF
      kclgpNMY6Qza0hIil8O2Zg2S/b2tl8vyBZrqP4fqCGBxeKmvWNmIsOIW6M4jryl85aVvUOst
      59c2PYjX9v6C6o1CgdTzL5B84glEQcFcVYWlqhLZ7b70z+NB9rgR+QLZo8dw33MA11373lPx
      XpY79Lf+299T17GBVNrMww/vel+dvRZFAbjzEEJwcPwsf33iCep9FfzpPb/xLge79/w9RSF7
      8hSJxx9HqBruu/Yhez24du5EcjjgZyp3vvUcDANk+YpWp2VsgZzU1fo5f+Y0Wz7+uWUPskiR
      KyFJEqVOHxbZTErJohtXty4Kw6DQ30/yx0+ijI3jOnA33gcewFRy9d2IJEkIvUChbwCBFVvn
      GvTpQXTNjm1VI5K8LCVYZSmUwuqykUsXC70VWRnWVjTx7/f9MnlVuaJZVAiBOjdH5C//mvD/
      +xfIbg8V//FP8D/6hWtO/rcwwpMoMR1rQx3G9DmyExnMpW/psfpyVgAJm6+cu9atwVt2+1aI
      KXJrIUsy6ypa2FTTzjODR+gsb3qXWTTz2uvEvvs9rE1NBP/wD7C1t7/vwBoBGKFZsuc0TFoE
      UbCS68nj2rP9Uh2La9+iQC4HFosFs6mYn74IgODU2GHmVDNNwVWsLfHxxOlnaGs9wDqfl6X4
      FKfDc8wkY+ysa2cqEWI8mWZXeZDBdIH9zZ1MRiJsqG7kwbad/Mmr32I0Mkt7sP7tJxi5HIl/
      /iHuffvwP/r5S+lPrgPZW4XnUy3kfvo4IlCDubIJaa4HLa1g8duXswWyoKTnOHHiBMNT4evq
      RJGPGjqLmQyryppZ5Sthcq4Xj6+GnH5pL1/mr2d/fQs+ZwUd5c3sqqqj2ldNXi3gscoMzo/h
      crjI6zpNJdVsrG7niYsHMd6yxwhB+sWXkMxmvA9/+ronPwCSIH/iMKb23Th378aszCDXrsWk
      LaGGoteyAunEIgl0TUU1DOwuHyXeYkhkEYPFRIhQZomRZJqlRIig3YTwdvKpphZk4NzIa1gq
      trHGY+fUyOt4KrfQaNUYi86TKSSYywl83ir2VdcxuDTFf3rtO3xx36/QVlaPnkgQ+g9fxf2x
      e/E++PEbOpJrrAAGqcQS544f5+TJE1wcvboPh6bkiEajpLMFdLVAPJ5ANwT5TIpsXkHoKqpe
      9Ce67TF0ZhMLTCejlHpr+aWN97M+2ECdN8BQaAxNzzChOuh028HIMatYWeVyYLU40QxBa1k9
      BSWNx3rJ9NlWWkdneRNPDx5GN3Qyr72OMHTc+++64UO5xgpgsDh7gRdenGDHjip6R3QefnDb
      FVtPXTjGdN5JXU01yZlhcrrAWVpJOhRCt7poKndgCzYRcL6jehRXgCIAg0tT/J+vfZsvb/0C
      zj/7r/g++RDu+++/4dkkrqEEG0RDIZYiISZnXGzYsukqbQWpRIasqmG1VCNcFWxeVUXP4BCS
      XkApyCQykIoM4elejWQUI8KKvEO9u5z2QB0n/unv2G+1Ytm6FVVVb/hzryEAZjo27mGof5r5
      +Tks/joay6+QGEtA4/ptdNhkjhw/g9vpI1/Igexky571zE6OEYolqfFLLMS1tyPCgOIKUASA
      zzVsIf/dV7E88hnspaUfyjOXYQXSMXlq+OxnP8v29U1XbZmOzHL4yCnqW9dSG7Rz6twg9Q0N
      YOSR7QFaqkuYDGuUeYsRYUUuRwhBRd8oQgieLCl8aLuCZVWIefnHzxNVNWrbNrGja2WzOhR1
      gNsXPRpGcpUg28zokTCSpwTZagaho4XDSE4/JruEGloCsw2T14GRUTAF/Ih8DsnpfDsZlp5I
      sPDvv8jcrg38pX2Br9796zSVrGzsyXuxrOzQQk9QWduIrl4lLUqROwqRXST1+GPkJhKI3CKJ
      f/oB+Zk4ANpYH9neETKvvoo6fo702Qn0dIb8sSNkT51EnRkjP7502f3Srx5Estnp/sTnafBX
      8NOR4++cC9xAliEAaeZCaSKzc8zNLl27eZGPPEIY5M/1Y+taDcIgd7QHx7aut6+r80vYujdg
      9kuoczFEJoaR05DdNoyCijITxgiPo8UywKWvf/rFF/Hcfx9mj4dPdezh8GQvi+noDR/L1QVA
      CHTdze59m0mmU2zbtbIF8orcpihZlJlZlMFhlIFelHCMwoULKBOzCEC2WzCSaYx0AXPHDko+
      cy9q/xks63bi7l6F2ZYHu5/88OTbqQolixXX3j1IksS6yhaaSqp4evDwDdcFrioA6fAEh08P
      ko8mkBwwODB1QztT5PZAsrnxff4Xcd93H66d2/B/4fN47rsPZ9cqChcvYlm3AWPyAnJDFyY5
      SebgISzt3chWMAw71rVbkHJR7C11qNPTpF95Fd/nP4f8ZlUbq8nC59bezYmZiwwtTX3w0Elh
      oBr6pQ+6oV/mcnFVJbiQnOeHT/yEnL2KX7pvNQf7sty/Z+0H6szPU1SC71yEECz93/8PmC2U
      /W+/d1m+HoC/PfU0R6f7eHTdPexp7MJ+XYU7BEPTp3lyMc7vrdnIT4eOUFmzl62lXtAL17YC
      GYYOkozQVQzMWMwr6xFaFIA7E6Fpb+bo/zbBP/y32Fd3vKtNVsnz4ugJnux/gxpfkC+sPcDa
      ivdnhVSVGAdnF0jmFvlM5z5mFs4ya2lhW6kXuMZBWHxuiN7JRZJh2LG7E6vdicV84zP4Fvno
      kzt7jujX/wbZ78NSU/2ebZxWO5/s2MOuhi4e632Z/+uNf2RLdQePrLmLak/ZstwkxkJDhDIF
      ZuMLhPKFd12/ao0wi9XG7Og5TpwZIJFcIie5qasMLH+Uy6BYI+zOQwhB4cJF8mfPYmtrxbVn
      D5L5vb/FkiThtNjZXNPO6mAjx2cu8tTAG6iGRr2/EvOb5U6vRJmvlvXlDZgliUqr4PjCFEu5
      LCVmg4hmWs5BmM7JV56lbzLKzo99ivaaYlaIIh8MI51m4YtfxrF9G77PPIJ8lSzUP4sQAkVX
      OTZ9gR/0vUJBV7GZLPz6pofoLG/CarIgv0/nuWUIQJzv/+MRPv/wen7wwgSPPrz7fT3gWhQF
      4M5CCEH8u98j39dH+Ve+jMlzfXmmorkkf/LK3zObWkKWZMpdJTT4K2gqqaYlUEOlO4DP7mY2
      uUS1t/SKWSeWtQIcfuFJxkJp1uy8j42rKq6rw1eiKAB3EEJQGB5h8T//OaW/+zs4N11/+nUh
      BMORGQaWJlgdbGQ2GWY4MsNYdJbpxCJWkwWHxUosl2JPYze/teXT15sX6MZSFIA7ByOfJ/xn
      /xlTMEjZ//I7cIN8/RVdZTIe4qXRkxwcP0NbaR1/fOA33nN7tAy3zCRnTy2yYWMFZ87Os3FT
      21XaCoZOvIRaswNPeoSR2Sit6zcRGT5PwVXJmioHWXsF5Z7ihL8Tybz2OtriIoHf+W2QJMJL
      wzwVivJoUxOHZkbQJDsHmjfgMMHIXC8D6RydlauYXRwioUtsruugZ+Is/tIOakxZbN5GgtZ3
      G1CsJgutpbU0+CvoKGvgW2d+wmh0htbSune1vYYAKLz+9I948pURTp6qpmXzvVdpK0gtzWCY
      7GTzGdSCg727tnJhaADDVopFTTIXh7LyAkJYEOKd0EjjGomRirxfBEY8DrIF2ePESCTAAMnn
      RzKBSCYQJhuy045IJRAmO7LDjJFMI/v8CKWAZLWxknVLtcVFEk/8CO/Dn8ZUHkTXspyLpXCL
      HFarn/2N3bw4fJS0qmETeU6Fo+xr6cYvFzhRMLM1YOPM/BCG5CKWmkOyeWl1KxjGlRVos2Ri
      T8N6+kJjfPvsc3xp369iM13+8b2GAFjZ+4lHMUwvolpslHmvfAYgDIOzZ87iclhZyMxRV+pB
      lk0I2U1DlYNQTCaViBJfCtGwdgdlb8bWG4ZxyxVRvt0RegZlaAxtcgDztrspHDuMY/VqTA43
      Umqc9IlZZC2JubMFdWwJqZBEbqhBzM9A9XokNYl9w9oV+7sITSP+2A8wV1Xh2LcXwzAYn+sj
      VNCIpCJEsglOTfXRVNWN3yxhaCqKrjKxNEJYc7CvupLRyBiKXE1X0MRsKkM4Pc9CZondjRvx
      mq9uRv/C2rv5dy99nVdGT/OxVVsvk+tl5QVaihnsunstdtcVosEAJJkNW3ejxibJ56twFCZ4
      5bUJGjs3ESi3EUkvUebJMzqTxWySML2ZY8gwDMxXsAEXuU5MHnSbimK4sdo1Cuk0Rt7AZrci
      aS7IJEBbxIg1QTqB0KKIRCUim0dORpDkAsZ8HFv9ylTvzZ7rodDTQ/kXv4jlTX+f+qq1lJQq
      vDSWJxYfYkYRWBKzBM0FMrKHzhIP87kspb4gC8lF5rM6W1fVEhBJUrixiBSzioxtGfmqyj0B
      Hl69jycHD7G9fg2lznfm8TKU4Czf/eu/Q/KWUL96G3s3tX7gF/KzFJXglUeoBYQwUTj8FKJp
      P/YqD4WjT0PTPdjrnaAJcq88idz9ALZSG7mXfoRp0yewutLkeofRDTukwng+drUt7/IwslkW
      vvglHFu34n/0C++q0PJhkVML/MeD/0CtL8hvbXn47dVtGb2RqK2rx+FwYLUUv9S3BVqW7Buv
      oYlyrH6D3LFDaFIVcn4OI5sme+g1jJI2rD6d7BsHEWWdWMtsaKEYtu6NmE1pzA3v9s153whB
      8qmnQZLxPvjxmzb5ARwWG19Yd4Dj0xfpD0+8/fNlrAACwxDo6WlePpvi/n1Fb9A7FaGqaOEw
      +Z7zZA4fQRkbw9rchKWuDmtDA5a6OszBMmS3G8lqJd93gaWv/TfKfvd3cGzccMPMnsvuvxD8
      9xM/Yia5yFfu+jUcFttydIA8B59+gUg+S6Bp843vZZFbg7fKDgHqzAz5nh5yJ0+jTE5iKg3g
      6OrC8/EH0EIh1JkZ0gdfQwuFADAFAshOJ8rEBNb6OuzdXTd98sMlv6LPrt3Pl178BgfHz/JA
      2/blCIANn8/MRFRlTdXK1Y4tcutiFAos/cX/hx6NgSShLy0h+/04t2zG/yu/hKW2FslqfXsf
      LYQAVX17hVCmpskeOQqahjkYhJu49fl5gk4/j3Tu5fELr7K1dnXRF6jIOwghUKemST7zE7Jv
      vAFC4L7/Plx7dmNtaLiix+Z7YeTzFPr7sTY3Y/JdxXp4E8hrCn968B+o8ZRdXQCEEBhC58TL
      zzAyl2Dt7gfY0FK+op0pCsC70eZGyV+cwLp2M2Yv5AcmcWxYd6niiZold/wEwl6Oc2MbhbMn
      Ec5qbLUucudHsW/Zgh6aw1JXu+xzLGEYaPPzJJ/5CbkTJzHX1uDctBHZ5cK1dy/SLfb3yeUi
      HJsbo8zfyNpAGZHEFFOqnQ3BCiQEkeQcC6qFzkAZI6EBpvKwo6aJ3rlBmivXgBJjJpPhv7zx
      3avHA2TCE5waCLNzz246mwNcHInS0rCyAlCMB3g3Qpiw1vpIv34eS9BD9ux57GtWX9pyCA1T
      aS1a70G0vEA3/EiRC+RHljBX2FAml8DqxVJ6dS9LYRggBOrEBInvP0bsu99Dstko+dVfxv/5
      z2Hv6MDa3PyuMMX3g5EKk3njKMpcFHNFCdk3XkddTGGurESSBeroBbKn+5C8pRhzA2TPXEDy
      +skffR1D9kAqhGHxIlsu30KphqDOH+TExDnqAlWcnTjDpGphbWkQCYO5WIjhZITWklKyuhWv
      MsmxaAaPWWYkkQQhWF/ZyFI2fi0dQGd6chK1u43I/BTxbLFO8IeBRIH0y0cxVa/BXFWL7Djz
      zjXZgtp/BCXjxK5mMQVrMJl8CI8PbSGM7HKhDp3FyKZxdb33mY22uEjkG99E5Auos7NYW1oo
      +9//NfbO1Sv6tZccPpy7d5N++scUejKI0g5cqysuGd+1DJkz43gf/jiSyJB4ZRLvZz4OuRkK
      hgdjYgTDV4Kj9t1T1GmWeHX0NFhLCIUHCJS1Ekvl3rxqor6kgqH0GLJsxWbEOJmxsb+xkfMz
      /bjMgsV0jBcn8nSUNVwjIsxZgpcYL7x4kLDq4/79m7GscJWY4grwbrRwGEtVFYXhUSwVJeQv
      XMRSU4/QCqDkMEwepMwU+KrR5hYx4mFsG3dhcWpgtqCrZsilsTVe7vwlDANtbp7Yt79N4Xwv
      Rj5P2f/6e/g++wiWqqoP9LV/LyShkjt+FF2zI2k5tEiY/NleLM2rkEWG7Jk+tNlx1GgCbWoR
      fXYEzajAbE0hDDN6fIbCwBTWxiYk0zsbukgmhsdVSigxg8XiYDExy8VIjM6KaiQhWEqHGYqF
      qXE7eXqwj12Na/DafdQ4LaQNG1k1S0FXWFfeUHSHvhXRw7OooTjm+iZEYgE9nr2UgtAhYfJ7
      USemwOHH2lCJNjWOsJVgqQxgRGPIAT/a5BhSoAaz5x3fLaGqJH70Y9Iv/BRLQwPWxgaszc04
      d+28Yb5YemiS/NgC+sIMtrVryA/PgJrDsakbyemlcOowWK3grIDwBNgtUNqGs95GIaSiz17A
      UKy4DtyNyfaOcGbzCcYTEfyuINVuD5KhsJhXsKOA2c58fIGCISh1lxBPx9CB6pI67ELBanWS
      zoTJyS5qXO6rC0AmNsUT//w8by0uTev3cO/21Sv6kooCcGMRqkr+fC+Jx59AGAa+Rz6NY8OG
      D0WxFZqKkckiWWxIThsikwbJgmSREJiR0DFyBWSXCwwVI6cgu91gaCCZQFcQmoTksN2wY4Rl
      rQCLM2MsRNN4y2porF7ZtNVFAVh5hGGQPXoMI5Uie+Ik6uQkzl078X3mkZ8xSRbIHjyCltNw
      7tiG0nMKLaPjuvsAJrtMoecYykIEQ5TgaPFQGJvBVN+JlJxCl0pwtJSgax6sFd6bOtYPyjIM
      uwme/ucnsHkrKGkzrbgArCzi0qGMLsAkX6oSLsSlSuGyfOmaMEB6U48xjEsnlJL0dkXxt9vf
      3IFcN0II8j09RP7qr8EwcGzbSvkffeXS4dVlB1Jm7Ft3kD/6AlpGYN+6g9zBZ1DTGia7FVvX
      dkyuk+TiAcz1tZj8HlJHL2By+kGbQbEbWNvKEeKWOOS9bpZ1EtzY3sH83Di5TP7KzYRgfnyA
      oelF6lrX4dGX6J8I09m9icjoeQquatrLraRMJZS5b9AXX4By7jjKYgRhCmL1GygzE2jUE/j0
      LkQ2RuYnTyB1PYKjLEfubD9qNIWt0o8SSeLYugVtLoZzy5ob078biDAMlPEJkk89Rb7nPOaK
      CkxeL6W/9Ztvpxy8HBPaRA9aWsJmlVFHLqArViymt+6nkrs4h+OebsgtkTsziKmyHnuphBKS
      0RbnUQYHse//BLay2zVX1LIKZSuUlLeze/92zvdFrtoyUN3E9oogZy9OkDBZ2bKhk8HxCyCX
      IacXmZZLaGxaGR/zK2Ht3oY0eIJ8yIl98zpEfBHr+kvB17IrgGN9GwUJTKVBTI4RdJcPySyD
      SUYdn0a2yuiJHGbfe02aWxN1do7kU0+TPXkCW1sbwT/8A6zNzSDLyFcqMZqLoiymwShgRELo
      S1nQcuiJOIWUhtmew3BUYnLIFIamwW7BiCUwb9qAEh7EEvSgJNOXnIVuW6Rr6QAKrz/9Tzz5
      ygjt7dW0bPkYBza1XLF1LhXm7LlBApWVqJrE2lXV9AxNUmpRCOdMCCVJPJmje8dd+KzG2zXC
      5BX0FVFOv44uynFs6oBChNSL5/F8Yv/b1/XBwyimThyNboRSIPf6QWw774XsAtrMJLpWAkLD
      uWPD+362KGQxUjlkfwnoeYx0Htlf8o4JT82j53RMHgf/f3tvGiTpld11/54996zKqsrautbu
      rqru6la3lpY0o2W02LN4ZrCxbAyegAhgCAJeXhOBwTiIAF6WdwlDYPgAmAHC9hBgPLaMZwZs
      MfLImpE0Uqtb6q3W7tr3Lfft2e/7IbOrKqt3qaRuaeofUZGZdZ987v+5ec6999x77jleOo0U
      jCJrAq9ko8RjCMtECtxFb+r7uOvrCMel9NprWO+8g97bS+SnfxptcOAufW8EwrYBGUlTEc6u
      956PJNc4yzK4TvV/ml5dw/cFSCAcD0n/ZNtvd3Ek8i8Qib/FcsFi+MjNQ9gBIHzWVtYIx8Kk
      skXiUoVz728QSfZxqLuR8tQysmbhOB6uJ+pOge2bESw87HQWSRW4V8PokRLhx86g6zrW2Bhq
      WxxrahOhXkFoXdhzCyixDox4GCflED79OKU33kYbeAj9XpMzCw9zbAphlrAmA0iFNeSGCK7e
      RvTJYUBQeft1yqsmsVNJnBUfP7uFFg/gOj7BE4N4GQg+1IeXSmFeuoQxPIys6/ilEl6xiF8s
      4edy2HNzFP/0dfB99P5+mv6Pv0nwoVNI93peQ991nvZ2walu1RZ3F8/qwYVn3s0qUJ7//s3v
      8/zzR/jBxRJ/7qtP3vwyIbDMMmXTIRyNogiXYtkmEosg4+O6oEgexYpDNBLeNpw+NatAQiB8
      F+vcn+IaR5BSY7gFE/XIGcIne/DTC5QmsvjpRSKn+yi8cxXUEEabgbmUQU0kwCrgu1B+8w2c
      +QWkcLjqgCb8aq8L2772zuoqem8PLb/yK8iR8MG56g8CIe7GBggSNQq88dZFmgeeuvVlkoQR
      DGNsT50V4nFj+31VxhVi0Q+R9n4fIFwXYVrIkfA+39mn8oNXofMhIkcayH17ksizZyi+v4I4
      2YN97Sr+pok9u0AFB6WrD/vd1yktB3CX5yksLiMpCnK8ES3ZjN/cTPipzxI4dQolGkWORavC
      ryjbBq/a3IQSPXBP+cCQ7mAD5NbnWCuFONqbwDRdgkFj33uaj3MEEK5L+j/9Z6yJSZr+xl/H
      GBzcv5t7NqXXXsX3ddTuI8heGns1i37iEcisoh8/Dr6PeWWEyvmzFF97AyXRiHG4H7Wzi8Cx
      ozjTU+iPfw69tQG/UECORu/rMcIfB9x2BLBKW/zRy2dp76qu/R8aPMPTD9/aCH7Q4ZdKmCMj
      eFspCq9+H72vD+le5/q3gqIT/skv7/pHH8b106PtjQAIScJZXqb01lmSv/r3CJw8WXeLwImd
      z3fyoRdOjuIrb+Jltgg+/yKVH70NwiP8pZdQozKl730X3wGl9xE0LU3+nUniTw9Rem8E/ZEX
      EOlVQmce3jF2f0xx2+5F0cI89ZNf5qWXXuKll17iyYd6PyZa+w8hBJX33kdUTKJf+TLm5cuk
      f/O38K0bY8Z/VDAvXyb3+y/T+LVfxDjxIc9WqzEiX3gOJWSALCEHglV7oSbPwnaRE81YY5fQ
      h06jJapzU9nQcZcXARcnVfxwHD4FuK0CJDoHefShbjRNQ9M01E+w16a7vk72d36H2M/+WRq+
      9ou0/L1fxhobY+vX/w1eJrN9nRA+fj6Hly9VDwSVi/i70sMKz8HLZPAtF+E6eMUyIPALOXzL
      Qbg2vlsf6U4IgT03R/o3vkH0C58n/PxzH34q6VYofPcVjGe/hOLnkFp60NsjuNkKkiwT+cJX
      CA51Imk7to7af4Lw859D1W18V8G8eO7DcfgU4LYKUMqusbC8xOiVuY+JzkcD37LI/OZvoR8+
      TOQnXkSSJIyjR2n51b+Pn8ux8Wv/Aqd2oFtU0lQujFB65dvY61kqf/qHlCZq6WGFT+WHf0Jl
      dBI3nce+Okruu6+Ak6Xw6g8o/ugC1shFfLteAbxMhtS//XcYgwPEX/rZ/ZnXF9bwKgLr4rv4
      SgKpsIxT1FADFayFdZzpMUpvjxF+9jHM82/j53K4m1v4G1vopx5F9rIoyRtjZf644bZGsJlf
      59v/479z7mKKgWOH6H3oaT7/5PF9JbDbCBa+h7Cd6oaLJBCOi6Tp2/NU4fsI10PWq7FFheMh
      qUr1Ol2r+vMoSp0fjxCCwh/9Mfk//Dat/+yforW17i7EzWZJ/8Y3cNfXafpbfxP98GFEIUXh
      ldcJ/5mXkFbPUi72ET3ZCk6Z7H/7FsqhHowTj6K3xsh95zvEv/wC+T/4Ywg3oCQioMUJPVI9
      weWbFlu//uv4lQotf/eXUWKfbOexTxtueyBGNSKcOP0oXa0NhBubOX1qmKC+v8Gxdh+IcSYu
      UhkbpzK5hpSZpjJ6DXvTwuhuBQTO+Pukfv/7RB4/jXPlLTLfOYsaKFN+9zxCj2NPz6N1ttYp
      gDM3T/ob36Dha79I8OSeebckIQeDhJ54HGd+gdzLL6M2BDEvzxD+8ldQgwoiu4RjN2K0RgAP
      e2Gd0FOPUnrjLIGhI1iTkwSOnUQ/NgiVMu5WGjVkIwJtyJog+81vYs/M0vLLfwe1aX/TSx3g
      w+MuxmKTi5emaY0LXnv90kdKRht6mEBPM5Kq4KxZhL/4JcTmDAIQdhl73cQ41Igws1gpFaM9
      XN2q9wTu8jK4RZytHcPOtywyv/XbGMePE3761nsYkq7T+PW/QuTFF0n/x29SfP11ct/8Leyl
      Rcqja/jzI9gLc1hrJUKPHKVy9n2Cj5yi8vabCMumMjaPqOSRmzoJDnTiWSHUuE7hf3+P8tl3
      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
    </thumbnail>
    <thumbnail height='192' name='Summary Table' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
